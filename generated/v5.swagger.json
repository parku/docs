{
    "swagger": "2.0",
    "info": {
        "title": "Parku API v5 Reference",
        "version": "",
        "description": "The parku API is organized around REST. Our API is designed to have predictable, resource-oriented URLs and to use\nHTTP response codes to indicate API errors. We use built-in HTTP features, like HTTP authentication and HTTP verbs,\nwhich can be understood by off-the-shelf HTTP clients. JSON will be returned in all responses from the API,\nincluding errors.\n\n### Versions\n\n- previous: [v4](v4.html)\n\n- latest stable: __v5__\n\n#### Changes in v5\n\n- Replaced locations model with an hierarchical one. This affects the [Locations Endpoint](#locations-locations) and\n  [Bookings Endpoint](#bookings-bookings). Find the description of the new model at:\n  + [Location Model](#location-model)\n  + [Parking Space Group Model](#parking-space-group-model)\n  + [First Level Cluster Model](#first-level-cluster-model)\n  + [Second Level Cluster Model](#second-level-cluster-model)\n\n- extended [booking model](#booking-model) with `type`, `zone` and `payment`\n\n- added [onstreet](#onstreet) endpoint\n\n- added [stop a booking](#stop-a-booking)\n\n- added [user payment methods](#user-user-payment-methods)\n\n- `voucher` endpoint removed\n\n#### Api definition files\n\n- [Swagger definition](generated/v5.swagger.json) (readable by [Postman](https://www.getpostman.com/))\n\n- [Api Blueprint](generated/v5.apib)"
    },
    "host": "sandbox.test.parku.io",
    "basePath": "/v5",
    "schemes": [
        "https"
    ],
    "paths": {
        "/attributes": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 32,
                                "key": "adac",
                                "value": "12345"
                            }
                        }
                    }
                },
                "summary": "Create a new Attribute",
                "description": "",
                "tags": [
                    "Attributes"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "key": {
                                    "type": "string",
                                    "description": "The name of the attribute. Currently only 'adac' and 'test' are allowed"
                                },
                                "value": {
                                    "type": "string",
                                    "description": "The value of the attribute, eg. a membership number"
                                }
                            },
                            "required": [
                                "key",
                                "value"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/attributes/{attribute_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 32,
                                "key": "adac",
                                "value": "12345"
                            }
                        }
                    }
                },
                "summary": "Retrieve an Attribute",
                "description": "",
                "tags": [
                    "Attributes"
                ],
                "parameters": [
                    {
                        "name": "attribute_id",
                        "in": "path",
                        "description": "The identifier of the attribute to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/bookings": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
                                "license_plate": "B-AB 1234",
                                "phone_number": "+493057701872",
                                "reference": "HRS5J",
                                "date_start": "2016-10-27T10:00:00+0000",
                                "date_end": "2016-10-27T16:30:00+0000",
                                "price": {
                                    "total": 425,
                                    "parking_fee": 375,
                                    "transaction_fee": 25,
                                    "payment_provider_fee": 25,
                                    "currency": "EUR"
                                },
                                "violation": {
                                    "id": "005c4826-4e28-11e3-a675-d43d7eece53d"
                                },
                                "status": "active",
                                "type": "location",
                                "group_id": "123c4826-4e28-11e3-a675-d43d7eece53d",
                                "parking_space_code": "ABCDE",
                                "location": {
                                    "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                    "address_slug": "dorfstrasse-11",
                                    "latitude": 52.60826,
                                    "longitude": 13.19988,
                                    "street": "Dorfstraße",
                                    "street_number": "11",
                                    "postcode": "16761",
                                    "city": "Hennigsdorf",
                                    "country": "Deutschland",
                                    "bookable": true,
                                    "payment": {
                                        "methods": [
                                            "paypal"
                                        ],
                                        "types": [
                                            "post"
                                        ]
                                    },
                                    "availability": {
                                        "current": 0,
                                        "maximum": 1,
                                        "next_start": "2016-...15:00:..",
                                        "next_end": "2016-...15:00:.."
                                    },
                                    "parking_space_groups": [
                                        {
                                            "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                            "type": "off-street",
                                            "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                            "image_urls": [
                                                "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                            ],
                                            "options": [
                                                "excess length"
                                            ],
                                            "support": {
                                                "phone_number": "+493012064329"
                                            },
                                            "price": {
                                                "total": 150,
                                                "currency": "EUR",
                                                "period": "timeframe",
                                                "rate_hourly": 10,
                                                "rate_daily": 100,
                                                "rate_weekly": 300,
                                                "rate_monthly": 1500
                                            },
                                            "user_owned": false,
                                            "settings": {
                                                "bookable_range_start": -15,
                                                "bookable_range_end": 43200,
                                                "booking_duration_min": 30,
                                                "booking_duration_max": 43200
                                            },
                                            "required_fields": [
                                                "car_registration_number"
                                            ],
                                            "provider": "parku",
                                            "availability": {
                                                "current": 0,
                                                "maximum": 1,
                                                "next_start": "2016-...15:00:..",
                                                "next_end": "2016-...15:00:.."
                                            }
                                        }
                                    ],
                                    "gates": [
                                        {
                                            "type": "qrcode",
                                            "identifier": "PARKU3KU",
                                            "gateways": [
                                                {
                                                    "type": "api",
                                                    "name": "PRK-123"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "zone": {
                                    "id": "101012",
                                    "latitude": 53.123412,
                                    "longitude": 13.123412,
                                    "name": "Berlin 101012",
                                    "hours": "Mon-Fri, 08:00 - 22:30",
                                    "price": {
                                        "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                        "currency": "EUR"
                                    },
                                    "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                    "duration_max_minutes`": 760
                                },
                                "extend": {
                                    "date_start": "2016-10-27T10:00:00+0000",
                                    "date_end": "2016-10-27T12:00:00+0000",
                                    "minutes": 60,
                                    "price": 125,
                                    "currency": "EUR"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "license_plate": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "date_start": {
                                    "type": "string"
                                },
                                "date_end": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": [
                                                "number",
                                                "null"
                                            ],
                                            "description": "the overall amount to pay for the booking"
                                        },
                                        "parking_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "transaction_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "payment_provider_fee": {
                                            "type": "number",
                                            "description": "the payment provider fee included in `amount`"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                },
                                "violation": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "violation id"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "description": "status of the booking, can be `active` or `canceled` for `offstreet` bookings and `running`, `finished` or 'canceled' for `onstreet` bookings"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "offstreet",
                                        "onstreet"
                                    ],
                                    "description": "the booking type"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "the id of the booked parking space group"
                                },
                                "parking_space_code": {
                                    "type": "string",
                                    "description": "the code of the booked parking space"
                                },
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "unique identifier of the location used for referencing."
                                        },
                                        "address_slug": {
                                            "type": "string"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude part of the location geo coordinate"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude part of the location geo"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "the street name of the location without number"
                                        },
                                        "street_number": {
                                            "type": "string",
                                            "description": "the street number of the location"
                                        },
                                        "postcode": {
                                            "type": "string",
                                            "description": "post code of the location"
                                        },
                                        "city": {
                                            "type": "string",
                                            "description": "city of the location"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "country of the location in 2 character encoding  country of the location in 2\n\ncharacter encoding"
                                        },
                                        "bookable": {
                                            "type": "boolean",
                                            "description": "`true` if that locations can be booked via the parku API, `false` if the location\n\nis purely providing information"
                                        },
                                        "payment": {
                                            "type": "object",
                                            "properties": {
                                                "methods": {
                                                    "type": "array",
                                                    "description": "Possible payment methods for this location and user",
                                                    "items": {}
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "description": "Possible payment types for this location and user",
                                                    "items": {}
                                                }
                                            },
                                            "description": "available payment methods and types for the current user in this location. The payment methods and types depend on the private key of the logged in user. For locations requests using public keys these arrays will be empty."
                                        },
                                        "availability": {
                                            "type": "object",
                                            "properties": {
                                                "current": {
                                                    "type": "number",
                                                    "description": "the number of parking spaces available in the group for the requested time period defined\n\nby `start` and `end`the number of parking spaces available in the group for the requested time period defined by\n`start` and `end`"
                                                },
                                                "maximum": {
                                                    "type": "number",
                                                    "description": "the overall number of parking spaces at this group the overall number of parking spaces at\n\nthis group"
                                                },
                                                "next_start": {
                                                    "type": "string",
                                                    "description": "the start of the next from now slot in which a parking space in this\n\ngroup is free and bookable, can be in the past"
                                                },
                                                "next_end": {
                                                    "type": "string",
                                                    "description": "the end of the next slot from now in which a parking space in this group\n\nis free and bookable, can be in the past"
                                                }
                                            },
                                            "description": "describes the availability of the location in relation to the request"
                                        },
                                        "parking_space_groups": {
                                            "type": "array",
                                            "description": "different parking space groups for this location. See [Parking Space Group Data](#header-parking-space-group-data)",
                                            "items": {}
                                        },
                                        "gates": {
                                            "type": "array",
                                            "description": "the gates connected to the location",
                                            "items": {}
                                        }
                                    },
                                    "description": "the location that was booked, only available if `type` is `offstreet`."
                                },
                                "zone": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the parking zone id"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude of the requested point"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude of the requested point"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "the parking space zone name"
                                        },
                                        "hours": {
                                            "type": "string",
                                            "description": "the translated availability time in this zone"
                                        },
                                        "price": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "description": "description of the price"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "enum": [
                                                        "EUR",
                                                        "CHF"
                                                    ],
                                                    "description": "the currency of the price"
                                                }
                                            },
                                            "description": "information about the price for this zone"
                                        },
                                        "max_datetime_end": {
                                            "type": "string",
                                            "description": "Latest time when a booking has to end. Bookings that are not stopped after this time will be automatically stopped on backend side."
                                        },
                                        "duration_max_minutes`": {
                                            "type": "number",
                                            "description": "Maximum time the booking can be running in minutes. Bookings that are not stopped after this amount of time will be automatically stopped on backend side."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "latitude",
                                        "longitude",
                                        "price",
                                        "max_datetime_end",
                                        "duration_max_minutes`"
                                    ],
                                    "description": "the zone that was booked, only available if `type` is `onstreet`."
                                },
                                "extend": {
                                    "type": "object",
                                    "properties": {
                                        "date_start": {
                                            "type": "string",
                                            "description": "start date of the extended booking"
                                        },
                                        "date_end": {
                                            "type": "string",
                                            "description": "end date of the extended booking"
                                        },
                                        "minutes": {
                                            "type": "number",
                                            "description": "length of extension in minutes"
                                        },
                                        "price": {
                                            "type": "number",
                                            "description": "price of the extension"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Create a new Booking",
                "description": "",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "group_id": {
                                    "type": "string",
                                    "description": "The ID of the location you get returned from the locations request"
                                },
                                "date_start": {
                                    "type": "string",
                                    "description": "start date and time of the booking"
                                },
                                "date_end": {
                                    "type": "string",
                                    "description": "end date and time of the booking"
                                },
                                "license_plate": {
                                    "type": "string",
                                    "description": "The license plate of the used car.\n\nGet all cars of a user from the [cars](#user-cars-get) request."
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "The phone number.\n\nGet all phone numbers of a user from the [phone_numbers](`#user-phone_numbers-get`) request."
                                },
                                "payment": {
                                    "type": "array",
                                    "description": "The payments to use for paying (optional). This can be credits, coupons,\npaypal and braintree payments that have been authorized on the frontend."
                                },
                                "payment_method": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the payment method id,\n\nonly needed if type is `immediate`"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "immediate"
                                            ],
                                            "description": "How to execute the payment. Currently only immediate\n\npayments are supported."
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "description": "The payment method to use for paying. This method will be used for paying the fee of the booking\nafter all payments from the `payments` field have been applied. E.g. if you provided a 5 Euro\nvoucher via `payments`, the payment method will be used on 5 Euro less than the actual booking fee."
                                },
                                "required_fields": {
                                    "type": "object",
                                    "properties": {
                                        "car_color": {
                                            "type": "string",
                                            "description": "the car color"
                                        },
                                        "number_of_passengers": {
                                            "type": "string",
                                            "description": "the number of passengers"
                                        }
                                    },
                                    "description": "Parking space required fields defined in the locations request. The required fields should contain all required fields defined in location. All values should be sent as strings."
                                },
                                "user_metadata": {
                                    "type": "object",
                                    "properties": {
                                        "latitude": {
                                            "type": "number",
                                            "description": "users latitude"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "users longitude"
                                        }
                                    },
                                    "description": "Additional information about a user (optional). This is for example latitude/longitude parameters\nfor the users current position."
                                }
                            },
                            "required": [
                                "group_id",
                                "date_start",
                                "date_end",
                                "license_plate",
                                "phone_number"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": [
                                {
                                    "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
                                    "license_plate": "B-AB 1234",
                                    "phone_number": "+493057701872",
                                    "reference": "HRS5J",
                                    "date_start": "2016-10-27T10:00:00+0000",
                                    "date_end": "2016-10-27T16:30:00+0000",
                                    "price": {
                                        "total": 425,
                                        "parking_fee": 375,
                                        "transaction_fee": 25,
                                        "payment_provider_fee": 25,
                                        "currency": "EUR"
                                    },
                                    "violation": {
                                        "id": "005c4826-4e28-11e3-a675-d43d7eece53d"
                                    },
                                    "status": "active",
                                    "type": "location",
                                    "group_id": "123c4826-4e28-11e3-a675-d43d7eece53d",
                                    "parking_space_code": "ABCDE",
                                    "location": {
                                        "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                        "address_slug": "dorfstrasse-11",
                                        "latitude": 52.60826,
                                        "longitude": 13.19988,
                                        "street": "Dorfstraße",
                                        "street_number": "11",
                                        "postcode": "16761",
                                        "city": "Hennigsdorf",
                                        "country": "Deutschland",
                                        "bookable": true,
                                        "payment": {
                                            "methods": [
                                                "paypal"
                                            ],
                                            "types": [
                                                "post"
                                            ]
                                        },
                                        "availability": {
                                            "current": 0,
                                            "maximum": 1,
                                            "next_start": "2016-...15:00:..",
                                            "next_end": "2016-...15:00:.."
                                        },
                                        "parking_space_groups": [
                                            {
                                                "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                                "type": "off-street",
                                                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                                "image_urls": [
                                                    "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                                ],
                                                "options": [
                                                    "excess length"
                                                ],
                                                "support": {
                                                    "phone_number": "+493012064329"
                                                },
                                                "price": {
                                                    "total": 150,
                                                    "currency": "EUR",
                                                    "period": "timeframe",
                                                    "rate_hourly": 10,
                                                    "rate_daily": 100,
                                                    "rate_weekly": 300,
                                                    "rate_monthly": 1500
                                                },
                                                "user_owned": false,
                                                "settings": {
                                                    "bookable_range_start": -15,
                                                    "bookable_range_end": 43200,
                                                    "booking_duration_min": 30,
                                                    "booking_duration_max": 43200
                                                },
                                                "required_fields": [
                                                    "car_registration_number"
                                                ],
                                                "provider": "parku",
                                                "availability": {
                                                    "current": 0,
                                                    "maximum": 1,
                                                    "next_start": "2016-...15:00:..",
                                                    "next_end": "2016-...15:00:.."
                                                }
                                            }
                                        ],
                                        "gates": [
                                            {
                                                "type": "qrcode",
                                                "identifier": "PARKU3KU",
                                                "gateways": [
                                                    {
                                                        "type": "api",
                                                        "name": "PRK-123"
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    "zone": {
                                        "id": "101012",
                                        "latitude": 53.123412,
                                        "longitude": 13.123412,
                                        "name": "Berlin 101012",
                                        "hours": "Mon-Fri, 08:00 - 22:30",
                                        "price": {
                                            "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                            "currency": "EUR"
                                        },
                                        "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                        "duration_max_minutes`": 760
                                    },
                                    "extend": {
                                        "date_start": "2016-10-27T10:00:00+0000",
                                        "date_end": "2016-10-27T12:00:00+0000",
                                        "minutes": 60,
                                        "price": 125,
                                        "currency": "EUR"
                                    }
                                }
                            ]
                        },
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                },
                "summary": "List bookings",
                "description": "",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "description": "A limit on the number of objects to be returned.\nCount can range between 1 and 100 items.\n",
                        "required": false,
                        "type": "number",
                        "default": 10
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "An offset into the list of returned items.\nThe API will return the requested number of items starting at that offset.\n",
                        "required": false,
                        "type": "number"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter bookings for status.",
                        "required": false,
                        "type": "string",
                        "default": "all",
                        "enum": [
                            "all",
                            "active",
                            "cancelled",
                            "running",
                            "finished"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Filter bookings for their type",
                        "required": false,
                        "type": "string",
                        "default": "all",
                        "enum": [
                            "all",
                            "offstreet",
                            "onstreet"
                        ]
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/bookings/{reference}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
                                "license_plate": "B-AB 1234",
                                "phone_number": "+493057701872",
                                "reference": "HRS5J",
                                "date_start": "2016-10-27T10:00:00+0000",
                                "date_end": "2016-10-27T16:30:00+0000",
                                "price": {
                                    "total": 425,
                                    "parking_fee": 375,
                                    "transaction_fee": 25,
                                    "payment_provider_fee": 25,
                                    "currency": "EUR"
                                },
                                "violation": {
                                    "id": "005c4826-4e28-11e3-a675-d43d7eece53d"
                                },
                                "status": "active",
                                "type": "location",
                                "group_id": "123c4826-4e28-11e3-a675-d43d7eece53d",
                                "parking_space_code": "ABCDE",
                                "location": {
                                    "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                    "address_slug": "dorfstrasse-11",
                                    "latitude": 52.60826,
                                    "longitude": 13.19988,
                                    "street": "Dorfstraße",
                                    "street_number": "11",
                                    "postcode": "16761",
                                    "city": "Hennigsdorf",
                                    "country": "Deutschland",
                                    "bookable": true,
                                    "payment": {
                                        "methods": [
                                            "paypal"
                                        ],
                                        "types": [
                                            "post"
                                        ]
                                    },
                                    "availability": {
                                        "current": 0,
                                        "maximum": 1,
                                        "next_start": "2016-...15:00:..",
                                        "next_end": "2016-...15:00:.."
                                    },
                                    "parking_space_groups": [
                                        {
                                            "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                            "type": "off-street",
                                            "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                            "image_urls": [
                                                "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                            ],
                                            "options": [
                                                "excess length"
                                            ],
                                            "support": {
                                                "phone_number": "+493012064329"
                                            },
                                            "price": {
                                                "total": 150,
                                                "currency": "EUR",
                                                "period": "timeframe",
                                                "rate_hourly": 10,
                                                "rate_daily": 100,
                                                "rate_weekly": 300,
                                                "rate_monthly": 1500
                                            },
                                            "user_owned": false,
                                            "settings": {
                                                "bookable_range_start": -15,
                                                "bookable_range_end": 43200,
                                                "booking_duration_min": 30,
                                                "booking_duration_max": 43200
                                            },
                                            "required_fields": [
                                                "car_registration_number"
                                            ],
                                            "provider": "parku",
                                            "availability": {
                                                "current": 0,
                                                "maximum": 1,
                                                "next_start": "2016-...15:00:..",
                                                "next_end": "2016-...15:00:.."
                                            }
                                        }
                                    ],
                                    "gates": [
                                        {
                                            "type": "qrcode",
                                            "identifier": "PARKU3KU",
                                            "gateways": [
                                                {
                                                    "type": "api",
                                                    "name": "PRK-123"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "zone": {
                                    "id": "101012",
                                    "latitude": 53.123412,
                                    "longitude": 13.123412,
                                    "name": "Berlin 101012",
                                    "hours": "Mon-Fri, 08:00 - 22:30",
                                    "price": {
                                        "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                        "currency": "EUR"
                                    },
                                    "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                    "duration_max_minutes`": 760
                                },
                                "extend": {
                                    "date_start": "2016-10-27T10:00:00+0000",
                                    "date_end": "2016-10-27T12:00:00+0000",
                                    "minutes": 60,
                                    "price": 125,
                                    "currency": "EUR"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "license_plate": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "date_start": {
                                    "type": "string"
                                },
                                "date_end": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": [
                                                "number",
                                                "null"
                                            ],
                                            "description": "the overall amount to pay for the booking"
                                        },
                                        "parking_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "transaction_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "payment_provider_fee": {
                                            "type": "number",
                                            "description": "the payment provider fee included in `amount`"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                },
                                "violation": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "violation id"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "description": "status of the booking, can be `active` or `canceled` for `offstreet` bookings and `running`, `finished` or 'canceled' for `onstreet` bookings"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "offstreet",
                                        "onstreet"
                                    ],
                                    "description": "the booking type"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "the id of the booked parking space group"
                                },
                                "parking_space_code": {
                                    "type": "string",
                                    "description": "the code of the booked parking space"
                                },
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "unique identifier of the location used for referencing."
                                        },
                                        "address_slug": {
                                            "type": "string"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude part of the location geo coordinate"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude part of the location geo"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "the street name of the location without number"
                                        },
                                        "street_number": {
                                            "type": "string",
                                            "description": "the street number of the location"
                                        },
                                        "postcode": {
                                            "type": "string",
                                            "description": "post code of the location"
                                        },
                                        "city": {
                                            "type": "string",
                                            "description": "city of the location"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "country of the location in 2 character encoding  country of the location in 2\n\ncharacter encoding"
                                        },
                                        "bookable": {
                                            "type": "boolean",
                                            "description": "`true` if that locations can be booked via the parku API, `false` if the location\n\nis purely providing information"
                                        },
                                        "payment": {
                                            "type": "object",
                                            "properties": {
                                                "methods": {
                                                    "type": "array",
                                                    "description": "Possible payment methods for this location and user",
                                                    "items": {}
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "description": "Possible payment types for this location and user",
                                                    "items": {}
                                                }
                                            },
                                            "description": "available payment methods and types for the current user in this location. The payment methods and types depend on the private key of the logged in user. For locations requests using public keys these arrays will be empty."
                                        },
                                        "availability": {
                                            "type": "object",
                                            "properties": {
                                                "current": {
                                                    "type": "number",
                                                    "description": "the number of parking spaces available in the group for the requested time period defined\n\nby `start` and `end`the number of parking spaces available in the group for the requested time period defined by\n`start` and `end`"
                                                },
                                                "maximum": {
                                                    "type": "number",
                                                    "description": "the overall number of parking spaces at this group the overall number of parking spaces at\n\nthis group"
                                                },
                                                "next_start": {
                                                    "type": "string",
                                                    "description": "the start of the next from now slot in which a parking space in this\n\ngroup is free and bookable, can be in the past"
                                                },
                                                "next_end": {
                                                    "type": "string",
                                                    "description": "the end of the next slot from now in which a parking space in this group\n\nis free and bookable, can be in the past"
                                                }
                                            },
                                            "description": "describes the availability of the location in relation to the request"
                                        },
                                        "parking_space_groups": {
                                            "type": "array",
                                            "description": "different parking space groups for this location. See [Parking Space Group Data](#header-parking-space-group-data)",
                                            "items": {}
                                        },
                                        "gates": {
                                            "type": "array",
                                            "description": "the gates connected to the location",
                                            "items": {}
                                        }
                                    },
                                    "description": "the location that was booked, only available if `type` is `offstreet`."
                                },
                                "zone": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the parking zone id"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude of the requested point"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude of the requested point"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "the parking space zone name"
                                        },
                                        "hours": {
                                            "type": "string",
                                            "description": "the translated availability time in this zone"
                                        },
                                        "price": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "description": "description of the price"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "enum": [
                                                        "EUR",
                                                        "CHF"
                                                    ],
                                                    "description": "the currency of the price"
                                                }
                                            },
                                            "description": "information about the price for this zone"
                                        },
                                        "max_datetime_end": {
                                            "type": "string",
                                            "description": "Latest time when a booking has to end. Bookings that are not stopped after this time will be automatically stopped on backend side."
                                        },
                                        "duration_max_minutes`": {
                                            "type": "number",
                                            "description": "Maximum time the booking can be running in minutes. Bookings that are not stopped after this amount of time will be automatically stopped on backend side."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "latitude",
                                        "longitude",
                                        "price",
                                        "max_datetime_end",
                                        "duration_max_minutes`"
                                    ],
                                    "description": "the zone that was booked, only available if `type` is `onstreet`."
                                },
                                "extend": {
                                    "type": "object",
                                    "properties": {
                                        "date_start": {
                                            "type": "string",
                                            "description": "start date of the extended booking"
                                        },
                                        "date_end": {
                                            "type": "string",
                                            "description": "end date of the extended booking"
                                        },
                                        "minutes": {
                                            "type": "number",
                                            "description": "length of extension in minutes"
                                        },
                                        "price": {
                                            "type": "number",
                                            "description": "price of the extension"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve a Booking",
                "description": "Retrieves the details of an existing booking. You need to supply either the id or the reference of a booking.",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "The id or code of the booking",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/bookings/{booking_id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Booking"
                        }
                    }
                },
                "summary": "Update a Booking",
                "description": "Updates the booking by setting the values of the parameters passed. Any parameter not provided will be left unchanged.",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "the booking id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "license_plate": {
                                    "type": "string",
                                    "description": "refer to the description of [`Create a new Booking`](#bookings-bookings-post)"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "refer to the description of [`Create a new Booking`](#bookings-bookings-post)"
                                },
                                "date_end": {
                                    "type": "string",
                                    "description": "refer to the description of [`Create a new Booking`](#bookings-bookings-post)"
                                },
                                "payment": {
                                    "type": "array",
                                    "description": "The payments to use for paying (optional). This can be credits, coupons,\npaypal and braintree payments that have been authorized on the frontend."
                                },
                                "payment_method": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the payment method id,\n\nonly needed if type is `immediate`"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "immediate"
                                            ],
                                            "description": "How to execute the payment. Currently only immediate\n\npayments are supported."
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "description": "The payment method to use for paying."
                                }
                            }
                        }
                    }
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Booking"
                        }
                    }
                },
                "summary": "Cancel a Booking",
                "description": "",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "the booking id",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/bookings/{booking_id}/stop": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
                                "license_plate": "B-AB 1234",
                                "phone_number": "+493057701872",
                                "reference": "HRS5J",
                                "date_start": "2016-10-27T10:00:00+0000",
                                "date_end": "2016-10-27T16:30:00+0000",
                                "price": {
                                    "total": 425,
                                    "parking_fee": 375,
                                    "transaction_fee": 25,
                                    "payment_provider_fee": 25,
                                    "currency": "EUR"
                                },
                                "violation": {
                                    "id": "005c4826-4e28-11e3-a675-d43d7eece53d"
                                },
                                "status": "active",
                                "type": "location",
                                "group_id": "123c4826-4e28-11e3-a675-d43d7eece53d",
                                "parking_space_code": "ABCDE",
                                "location": {
                                    "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                    "address_slug": "dorfstrasse-11",
                                    "latitude": 52.60826,
                                    "longitude": 13.19988,
                                    "street": "Dorfstraße",
                                    "street_number": "11",
                                    "postcode": "16761",
                                    "city": "Hennigsdorf",
                                    "country": "Deutschland",
                                    "bookable": true,
                                    "payment": {
                                        "methods": [
                                            "paypal"
                                        ],
                                        "types": [
                                            "post"
                                        ]
                                    },
                                    "availability": {
                                        "current": 0,
                                        "maximum": 1,
                                        "next_start": "2016-...15:00:..",
                                        "next_end": "2016-...15:00:.."
                                    },
                                    "parking_space_groups": [
                                        {
                                            "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                            "type": "off-street",
                                            "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                            "image_urls": [
                                                "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                            ],
                                            "options": [
                                                "excess length"
                                            ],
                                            "support": {
                                                "phone_number": "+493012064329"
                                            },
                                            "price": {
                                                "total": 150,
                                                "currency": "EUR",
                                                "period": "timeframe",
                                                "rate_hourly": 10,
                                                "rate_daily": 100,
                                                "rate_weekly": 300,
                                                "rate_monthly": 1500
                                            },
                                            "user_owned": false,
                                            "settings": {
                                                "bookable_range_start": -15,
                                                "bookable_range_end": 43200,
                                                "booking_duration_min": 30,
                                                "booking_duration_max": 43200
                                            },
                                            "required_fields": [
                                                "car_registration_number"
                                            ],
                                            "provider": "parku",
                                            "availability": {
                                                "current": 0,
                                                "maximum": 1,
                                                "next_start": "2016-...15:00:..",
                                                "next_end": "2016-...15:00:.."
                                            }
                                        }
                                    ],
                                    "gates": [
                                        {
                                            "type": "qrcode",
                                            "identifier": "PARKU3KU",
                                            "gateways": [
                                                {
                                                    "type": "api",
                                                    "name": "PRK-123"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "zone": {
                                    "id": "101012",
                                    "latitude": 53.123412,
                                    "longitude": 13.123412,
                                    "name": "Berlin 101012",
                                    "hours": "Mon-Fri, 08:00 - 22:30",
                                    "price": {
                                        "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                        "currency": "EUR"
                                    },
                                    "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                    "duration_max_minutes`": 760
                                },
                                "extend": {
                                    "date_start": "2016-10-27T10:00:00+0000",
                                    "date_end": "2016-10-27T12:00:00+0000",
                                    "minutes": 60,
                                    "price": 125,
                                    "currency": "EUR"
                                },
                                "payment_urls": {
                                    "urls": {
                                        "entrance": "http://www.ideal.nl/asdf1234",
                                        "success": "http://www.ideal.nl/asdf1234",
                                        "cancel": "http://www.ideal.nl/asdf1234",
                                        "failure": "http://www.ideal.nl/asdf1234",
                                        "pending": "http://www.ideal.nl/asdf1234"
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "license_plate": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "date_start": {
                                    "type": "string"
                                },
                                "date_end": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": [
                                                "number",
                                                "null"
                                            ],
                                            "description": "the overall amount to pay for the booking"
                                        },
                                        "parking_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "transaction_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "payment_provider_fee": {
                                            "type": "number",
                                            "description": "the payment provider fee included in `amount`"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                },
                                "violation": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "violation id"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "description": "status of the booking, can be `active` or `canceled` for `offstreet` bookings and `running`, `finished` or 'canceled' for `onstreet` bookings"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "offstreet",
                                        "onstreet"
                                    ],
                                    "description": "the booking type"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "the id of the booked parking space group"
                                },
                                "parking_space_code": {
                                    "type": "string",
                                    "description": "the code of the booked parking space"
                                },
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "unique identifier of the location used for referencing."
                                        },
                                        "address_slug": {
                                            "type": "string"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude part of the location geo coordinate"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude part of the location geo"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "the street name of the location without number"
                                        },
                                        "street_number": {
                                            "type": "string",
                                            "description": "the street number of the location"
                                        },
                                        "postcode": {
                                            "type": "string",
                                            "description": "post code of the location"
                                        },
                                        "city": {
                                            "type": "string",
                                            "description": "city of the location"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "country of the location in 2 character encoding  country of the location in 2\n\ncharacter encoding"
                                        },
                                        "bookable": {
                                            "type": "boolean",
                                            "description": "`true` if that locations can be booked via the parku API, `false` if the location\n\nis purely providing information"
                                        },
                                        "payment": {
                                            "type": "object",
                                            "properties": {
                                                "methods": {
                                                    "type": "array",
                                                    "description": "Possible payment methods for this location and user",
                                                    "items": {}
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "description": "Possible payment types for this location and user",
                                                    "items": {}
                                                }
                                            },
                                            "description": "available payment methods and types for the current user in this location. The payment methods and types depend on the private key of the logged in user. For locations requests using public keys these arrays will be empty."
                                        },
                                        "availability": {
                                            "type": "object",
                                            "properties": {
                                                "current": {
                                                    "type": "number",
                                                    "description": "the number of parking spaces available in the group for the requested time period defined\n\nby `start` and `end`the number of parking spaces available in the group for the requested time period defined by\n`start` and `end`"
                                                },
                                                "maximum": {
                                                    "type": "number",
                                                    "description": "the overall number of parking spaces at this group the overall number of parking spaces at\n\nthis group"
                                                },
                                                "next_start": {
                                                    "type": "string",
                                                    "description": "the start of the next from now slot in which a parking space in this\n\ngroup is free and bookable, can be in the past"
                                                },
                                                "next_end": {
                                                    "type": "string",
                                                    "description": "the end of the next slot from now in which a parking space in this group\n\nis free and bookable, can be in the past"
                                                }
                                            },
                                            "description": "describes the availability of the location in relation to the request"
                                        },
                                        "parking_space_groups": {
                                            "type": "array",
                                            "description": "different parking space groups for this location. See [Parking Space Group Data](#header-parking-space-group-data)",
                                            "items": {}
                                        },
                                        "gates": {
                                            "type": "array",
                                            "description": "the gates connected to the location",
                                            "items": {}
                                        }
                                    },
                                    "description": "the location that was booked, only available if `type` is `offstreet`."
                                },
                                "zone": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the parking zone id"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude of the requested point"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude of the requested point"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "the parking space zone name"
                                        },
                                        "hours": {
                                            "type": "string",
                                            "description": "the translated availability time in this zone"
                                        },
                                        "price": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "description": "description of the price"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "enum": [
                                                        "EUR",
                                                        "CHF"
                                                    ],
                                                    "description": "the currency of the price"
                                                }
                                            },
                                            "description": "information about the price for this zone"
                                        },
                                        "max_datetime_end": {
                                            "type": "string",
                                            "description": "Latest time when a booking has to end. Bookings that are not stopped after this time will be automatically stopped on backend side."
                                        },
                                        "duration_max_minutes`": {
                                            "type": "number",
                                            "description": "Maximum time the booking can be running in minutes. Bookings that are not stopped after this amount of time will be automatically stopped on backend side."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "latitude",
                                        "longitude",
                                        "price",
                                        "max_datetime_end",
                                        "duration_max_minutes`"
                                    ],
                                    "description": "the zone that was booked, only available if `type` is `onstreet`."
                                },
                                "extend": {
                                    "type": "object",
                                    "properties": {
                                        "date_start": {
                                            "type": "string",
                                            "description": "start date of the extended booking"
                                        },
                                        "date_end": {
                                            "type": "string",
                                            "description": "end date of the extended booking"
                                        },
                                        "minutes": {
                                            "type": "number",
                                            "description": "length of extension in minutes"
                                        },
                                        "price": {
                                            "type": "number",
                                            "description": "price of the extension"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                },
                                "payment_urls": {
                                    "type": "object",
                                    "properties": {
                                        "urls": {
                                            "type": "object",
                                            "properties": {
                                                "entrance": {
                                                    "type": "string"
                                                },
                                                "success": {
                                                    "type": "string"
                                                },
                                                "cancel": {
                                                    "type": "string"
                                                },
                                                "failure": {
                                                    "type": "string"
                                                },
                                                "pending": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "description": "urls for user to visit for doing the payment, currently only available for `ideal`"
                                }
                            }
                        }
                    }
                },
                "summary": "Stop a Booking",
                "description": "Stops and pays a booking.\n\nCurrently supports stopping onstreet bookings only.",
                "tags": [
                    "Bookings"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "the booking id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/cars": {
            "get": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "List all cars",
                "description": "Returns a list of all cars of the user. The cars are returned sorted by creation date,\nwith the most recently created car appearing first.",
                "tags": [
                    "Cars"
                ],
                "parameters": []
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 23,
                                "license_plate": "B-AB 1234",
                                "vehicle": "Isetta",
                                "country": "DE"
                            }
                        }
                    }
                },
                "summary": "Create a new Car",
                "description": "You can store multiple cars for a user.",
                "tags": [
                    "Cars"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "license_plate": {
                                    "type": "string",
                                    "description": "The license plate for the stored car."
                                },
                                "vehicle": {
                                    "type": "string",
                                    "description": "A name for the car to be identified easier."
                                },
                                "country": {
                                    "type": "string",
                                    "enum": [
                                        "DE",
                                        "CH"
                                    ],
                                    "description": "The country code the license plate."
                                }
                            },
                            "required": [
                                "license_plate"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/cars/{car_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 23,
                                "license_plate": "B-AB 1234",
                                "vehicle": "Isetta",
                                "country": "DE"
                            }
                        }
                    }
                },
                "summary": "Retrieve a Car",
                "description": "",
                "tags": [
                    "Cars"
                ],
                "parameters": [
                    {
                        "name": "car_id",
                        "in": "path",
                        "description": "The identifier of the car to be retrieved",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 23,
                                "license_plate": "B-AB 1234",
                                "vehicle": "Polo",
                                "country": "DE"
                            }
                        }
                    }
                },
                "summary": "Update a Car",
                "description": "Updates the car by setting the values of the parameters passed. Any parameters not provided will be left unchanged.",
                "tags": [
                    "Cars"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "car_id": {
                                    "type": "number",
                                    "description": "The identifier of the car to be updated."
                                },
                                "license_plate": {
                                    "type": "string",
                                    "description": "The license plate for the stored car."
                                },
                                "vehicle": {
                                    "type": "string",
                                    "description": "A name for the car to be identified easier."
                                },
                                "country": {
                                    "type": "string",
                                    "enum": [
                                        "DE",
                                        "CH"
                                    ],
                                    "description": "The country code the license plate."
                                }
                            },
                            "required": [
                                "car_id",
                                "license_plate"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a Car",
                "description": "",
                "tags": [
                    "Cars"
                ],
                "parameters": [
                    {
                        "name": "car_id",
                        "in": "path",
                        "description": "The identifier of the car to be deleted.",
                        "required": true,
                        "type": "number"
                    }
                ]
            }
        },
        "/coupon/{encoded_code}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "|           |                                         |\n|-----------|-----------------------------------------|\n| code      | `string` Decoded, sanitized coupon code |\n| value     | `number` Coupons value                  |\n| deduction | `number` Amount used of coupon value    |",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": "foobar123",
                                "value": 10,
                                "deduction": 10
                            }
                        }
                    },
                    "404": {
                        "description": "| Code |                                         Description                                         |\n|------|---------------------------------------------------------------------------------------------|\n| 20   | Coupon not found.                                                                           |\n| 21   | Coupon is inactive.                                                                         |\n| 22   | Coupon expired.                                                                             |\n| 23   | Coupon date (start or end) prohibit coupon usage.                                           |",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "error": [
                                    {
                                        "code": 20,
                                        "message": "Coupon not found."
                                    }
                                ]
                            }
                        }
                    },
                    "422": {
                        "description": "| Code |                                         Description                                         |\n|------|---------------------------------------------------------------------------------------------|\n| 10   | \"amount\" is faulty, probably below 0.                                                       |\n| 30   | Coupon quota exhausted.                                                                     |\n| 31   | User usage quota for this coupon is exhausted.                                              |\n| 32   | User usage quota for a coupon is same grouping is exhausted.                                |\n| 40   | Platform (Android, iOS, web) is not enabled. Some coupons only work on specific a platform. |",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "error": [
                                    {
                                        "code": 31,
                                        "message": "Coupon usage exceeded."
                                    }
                                ]
                            }
                        }
                    }
                },
                "summary": "Test a Coupon",
                "description": "",
                "tags": [
                    "Coupon"
                ],
                "parameters": [
                    {
                        "name": "encoded_code",
                        "in": "path",
                        "description": "A base64url encoded coupon code string.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action to do.",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "test"
                        ]
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount coupon has to be tested against.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/devices": {
            "post": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Create an Identifier",
                "description": "Send the latest device identifier to the backend.\n\nThe iOS device token can change through time.\n[Apple suggests](https://developer.apple.com/library/ios/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/IPhoneOSClientImp.html#//apple_ref/doc/uid/TP40008194-CH103-SW2)\nto send the device token every time the app launches.",
                "tags": [
                    "Devices"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "ios_device_token": {
                                    "type": "string",
                                    "description": "iOS push notification identifier via APNs.\n\nFull integration and how to request a push notification Device Token through Apple's APM service is accessible\n[here](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html).\nDevice Token may be raw format or in push format."
                                },
                                "android_registration_id": {
                                    "type": "string",
                                    "description": "Android push notification identifier via GCM.\n\nFull integration and how to request a push notification Registration ID through Android's GCM service is\naccessible [here](http://developer.android.com/google/gcm/gs.html)."
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/facebook/login": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Login Response"
                        }
                    }
                },
                "summary": "Facebook Login",
                "description": "When a new user was created through Facebook, the country is not set.\nIn this case, you must ask the user for the country and [update](#user-user-put) the user profile accordingly.\n\nAll further requests using the token as _HTTP Basic Auth_ username are made on behalf of the user.",
                "tags": [
                    "Facebook"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "access_token": {
                                    "type": "string",
                                    "description": "The access token which is used to obtain information from Facebook.\n\nThe token must have the permissions to get the users email."
                                },
                                "device_id": {
                                    "type": "string",
                                    "description": "identifier for the mobile device on that the registration is done, e.g. advertisement id for Android or iOS"
                                }
                            },
                            "required": [
                                "access_token"
                            ]
                        }
                    }
                ]
            }
        },
        "/invitations/{invitation_code}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "|       |                                                                   |\n|-------|-------------------------------------------------------------------|\n| valid | `bool` _true_, if the invitation code is valid, _false_ otherwise |",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "valid": true
                            }
                        }
                    }
                },
                "summary": "Check Invitation Code Validity",
                "description": "",
                "tags": [
                    "Invitations"
                ],
                "parameters": [
                    {
                        "name": "invitation_code",
                        "in": "path",
                        "description": "Base64 encoded invitation code.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/locations/{location_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "See [Location Model](#header-location-model)",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                "address_slug": "dorfstrasse-11",
                                "latitude": 52.60826,
                                "longitude": 13.19988,
                                "street": "Dorfstraße",
                                "street_number": "11",
                                "postcode": "16761",
                                "city": "Hennigsdorf",
                                "country": "Deutschland",
                                "bookable": true,
                                "payment": {
                                    "methods": [
                                        "paypal"
                                    ],
                                    "types": [
                                        "post"
                                    ]
                                },
                                "availability": {
                                    "current": 0,
                                    "maximum": 1,
                                    "next_start": "2016-...15:00:..",
                                    "next_end": "2016-...15:00:.."
                                },
                                "parking_space_groups": [
                                    {
                                        "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                        "type": "off-street",
                                        "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                        "image_urls": [
                                            "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                        ],
                                        "options": [
                                            "excess length"
                                        ],
                                        "support": {
                                            "phone_number": "+493012064329"
                                        },
                                        "price": {
                                            "total": 150,
                                            "currency": "EUR",
                                            "period": "timeframe",
                                            "rate_hourly": 10,
                                            "rate_daily": 100,
                                            "rate_weekly": 300,
                                            "rate_monthly": 1500
                                        },
                                        "user_owned": false,
                                        "settings": {
                                            "bookable_range_start": -15,
                                            "bookable_range_end": 43200,
                                            "booking_duration_min": 30,
                                            "booking_duration_max": 43200
                                        },
                                        "required_fields": [
                                            "car_registration_number"
                                        ],
                                        "provider": "parku",
                                        "availability": {
                                            "current": 0,
                                            "maximum": 1,
                                            "next_start": "2016-...15:00:..",
                                            "next_end": "2016-...15:00:.."
                                        }
                                    }
                                ],
                                "gates": [
                                    {
                                        "type": "qrcode",
                                        "identifier": "PARKU3KU",
                                        "gateways": [
                                            {
                                                "type": "api",
                                                "name": "PRK-123"
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "unique identifier of the location used for referencing."
                                },
                                "address_slug": {
                                    "type": "string"
                                },
                                "latitude": {
                                    "type": "number",
                                    "description": "latitude part of the location geo coordinate"
                                },
                                "longitude": {
                                    "type": "number",
                                    "description": "longitude part of the location geo"
                                },
                                "street": {
                                    "type": "string",
                                    "description": "the street name of the location without number"
                                },
                                "street_number": {
                                    "type": "string",
                                    "description": "the street number of the location"
                                },
                                "postcode": {
                                    "type": "string",
                                    "description": "post code of the location"
                                },
                                "city": {
                                    "type": "string",
                                    "description": "city of the location"
                                },
                                "country": {
                                    "type": "string",
                                    "description": "country of the location in 2 character encoding  country of the location in 2\n\ncharacter encoding"
                                },
                                "bookable": {
                                    "type": "boolean",
                                    "description": "`true` if that locations can be booked via the parku API, `false` if the location\n\nis purely providing information"
                                },
                                "payment": {
                                    "type": "object",
                                    "properties": {
                                        "methods": {
                                            "type": "array",
                                            "description": "Possible payment methods for this location and user",
                                            "items": {}
                                        },
                                        "types": {
                                            "type": "array",
                                            "description": "Possible payment types for this location and user",
                                            "items": {}
                                        }
                                    },
                                    "description": "available payment methods and types for the current user in this location. The payment methods and types depend on the private key of the logged in user. For locations requests using public keys these arrays will be empty."
                                },
                                "availability": {
                                    "type": "object",
                                    "properties": {
                                        "current": {
                                            "type": "number",
                                            "description": "the number of parking spaces available in the group for the requested time period defined\n\nby `start` and `end`the number of parking spaces available in the group for the requested time period defined by\n`start` and `end`"
                                        },
                                        "maximum": {
                                            "type": "number",
                                            "description": "the overall number of parking spaces at this group the overall number of parking spaces at\n\nthis group"
                                        },
                                        "next_start": {
                                            "type": "string",
                                            "description": "the start of the next from now slot in which a parking space in this\n\ngroup is free and bookable, can be in the past"
                                        },
                                        "next_end": {
                                            "type": "string",
                                            "description": "the end of the next slot from now in which a parking space in this group\n\nis free and bookable, can be in the past"
                                        }
                                    },
                                    "description": "describes the availability of the location in relation to the request"
                                },
                                "parking_space_groups": {
                                    "type": "array",
                                    "description": "different parking space groups for this location. See [Parking Space Group Data](#header-parking-space-group-data)",
                                    "items": {}
                                },
                                "gates": {
                                    "type": "array",
                                    "description": "the gates connected to the location",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location was not found, check the location id and that your user has the correct access rights to see the location.",
                        "headers": {},
                        "examples": {}
                    },
                    "422": {
                        "description": "Request validation failed because the request data was malformed.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Retrieve a Location",
                "description": "",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "Identifier of the location.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "10-27T09:10:20+00:00 (ISO 8601, optional) - Used to calculate the price for a location.\nRequires the field `date_end` to be defined. If no `date_start` or `date_end` is specified,\nthe returned `price` field will be `null`.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "10-27T10:10:20+00:00 (ISO 8601, optional)\nsee `date_start`.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "locations": [
                                    {
                                        "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                        "address_slug": "dorfstrasse-11",
                                        "latitude": 52.60826,
                                        "longitude": 13.19988,
                                        "street": "Dorfstraße",
                                        "street_number": "11",
                                        "postcode": "16761",
                                        "city": "Hennigsdorf",
                                        "country": "Deutschland",
                                        "bookable": true,
                                        "payment": {
                                            "methods": [
                                                "paypal"
                                            ],
                                            "types": [
                                                "post"
                                            ]
                                        },
                                        "availability": {
                                            "current": 0,
                                            "maximum": 1,
                                            "next_start": "2016-...15:00:..",
                                            "next_end": "2016-...15:00:.."
                                        },
                                        "parking_space_groups": [
                                            {
                                                "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                                "type": "off-street",
                                                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                                "image_urls": [
                                                    "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                                ],
                                                "options": [
                                                    "excess length"
                                                ],
                                                "support": {
                                                    "phone_number": "+493012064329"
                                                },
                                                "price": {
                                                    "total": 150,
                                                    "currency": "EUR",
                                                    "period": "timeframe",
                                                    "rate_hourly": 10,
                                                    "rate_daily": 100,
                                                    "rate_weekly": 300,
                                                    "rate_monthly": 1500
                                                },
                                                "user_owned": false,
                                                "settings": {
                                                    "bookable_range_start": -15,
                                                    "bookable_range_end": 43200,
                                                    "booking_duration_min": 30,
                                                    "booking_duration_max": 43200
                                                },
                                                "required_fields": [
                                                    "car_registration_number"
                                                ],
                                                "provider": "parku",
                                                "availability": {
                                                    "current": 0,
                                                    "maximum": 1,
                                                    "next_start": "2016-...15:00:..",
                                                    "next_end": "2016-...15:00:.."
                                                }
                                            }
                                        ],
                                        "gates": [
                                            {
                                                "type": "qrcode",
                                                "identifier": "PARKU3KU",
                                                "gateways": [
                                                    {
                                                        "type": "api",
                                                        "name": "PRK-123"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "locations": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "summary": "List Locations",
                "description": "Returns a list of locations for a given bounding box. This request returns the highest ranking 42 locations\nin the bounding box and does not return any other locations if there are more than 42. For retrieving all locations\nin a hierarchical manner, you can use the [List Clusters](#locations-locations-get-2) request.\n\nThe parameters named `filter_*` filter the returned results using the following logic:\n\n```\navailable\nAND bookable\nAND (type1 OR type2 OR ...)\nAND (price1 OR price2 OR ...)\nAND (properties1 AND properties2 AND ...)\n```",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "sw",
                        "in": "query",
                        "description": "Comma separated latitude and longitude of the southwest position.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ne",
                        "in": "query",
                        "description": "Comma separated latitude and longitude of the northeast position.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "10-27T09:10:20+00:00 (ISO 8601, optional) - Filter parking spaces for the start date.\n`date_start` will have no effect unless `date_end` is also provided.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "10-27T10:10:20+00:00 (ISO 8601, optional) - Filter parking spaces for the end date.\n`date_end` will have no effect unless `date_start` is also provided.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter_available",
                        "in": "query",
                        "description": "Filters returned locations regarding their availability if start and\nend are also given.\n\n* `true` only returns available locations\n\n* `false` return all locations",
                        "required": false,
                        "type": "boolean",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "filter_bookable",
                        "in": "query",
                        "description": "Filters returned locations regarding their general bookability.\n\n* `true` only returns locations that could be booked through the api if they are available\n\n* `false` only returns locations that can not be booked through the api, even though they might be available",
                        "required": false,
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "filter_type",
                        "in": "query",
                        "description": "Filters the result to only show parking spaces with\nwith either of the provided types.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "off-street",
                            "park-and-ride",
                            "professional-garage",
                            "airport-parking",
                            "harbor-parking"
                        ]
                    },
                    {
                        "name": "filter_price",
                        "in": "query",
                        "description": "\nFilters the result to only show parking spaces with\neither of the provided rates.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "rate_hourly",
                            "rate_daily",
                            "rate_weekly",
                            "rate_monthly"
                        ]
                    },
                    {
                        "name": "filter_properties",
                        "in": "query",
                        "description": "Filters the result to only show parking spaces\nall the provided properties.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "excess_length",
                            "indoor",
                            "patio",
                            "disabled",
                            "charging_station",
                            "key_necessary",
                            "long_term_booking",
                            "surveillance",
                            "valet_service",
                            "barrier"
                        ]
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Response will only contain the fields mentioned in this parameter.\nThis can either be `all` or an comma separated list of field names from the response, e.g. `id,street,country`.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/locations/clusters": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "clusters": [
                                    {
                                        "title": "13405",
                                        "type": "postcode",
                                        "count": 4,
                                        "center_latitude": 52.528809,
                                        "center_longitude": 13.379655,
                                        "sw_latitude": 52.505681,
                                        "sw_longitude": 13.285105,
                                        "ne_latitude": 52.576979,
                                        "ne_longitude": 13.47168,
                                        "includes": [
                                            {
                                                "title": "10115",
                                                "type": "postcode",
                                                "count": 4,
                                                "center_latitude": 52.528809,
                                                "center_longitude": 13.379655,
                                                "sw_latitude": 52.505681,
                                                "sw_longitude": 13.285105,
                                                "ne_latitude": 52.576979,
                                                "ne_longitude": 13.47168,
                                                "city": "Berlin",
                                                "country": "Deutschland"
                                            }
                                        ]
                                    }
                                ],
                                "locations": [
                                    {
                                        "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                        "address_slug": "dorfstrasse-11",
                                        "latitude": 52.60826,
                                        "longitude": 13.19988,
                                        "street": "Dorfstraße",
                                        "street_number": "11",
                                        "postcode": "16761",
                                        "city": "Hennigsdorf",
                                        "country": "Deutschland",
                                        "bookable": true,
                                        "payment": {
                                            "methods": [
                                                "paypal"
                                            ],
                                            "types": [
                                                "post"
                                            ]
                                        },
                                        "availability": {
                                            "current": 0,
                                            "maximum": 1,
                                            "next_start": "2016-...15:00:..",
                                            "next_end": "2016-...15:00:.."
                                        },
                                        "parking_space_groups": [
                                            {
                                                "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                                "type": "off-street",
                                                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                                "image_urls": [
                                                    "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                                ],
                                                "options": [
                                                    "excess length"
                                                ],
                                                "support": {
                                                    "phone_number": "+493012064329"
                                                },
                                                "price": {
                                                    "total": 150,
                                                    "currency": "EUR",
                                                    "period": "timeframe",
                                                    "rate_hourly": 10,
                                                    "rate_daily": 100,
                                                    "rate_weekly": 300,
                                                    "rate_monthly": 1500
                                                },
                                                "user_owned": false,
                                                "settings": {
                                                    "bookable_range_start": -15,
                                                    "bookable_range_end": 43200,
                                                    "booking_duration_min": 30,
                                                    "booking_duration_max": 43200
                                                },
                                                "required_fields": [
                                                    "car_registration_number"
                                                ],
                                                "provider": "parku",
                                                "availability": {
                                                    "current": 0,
                                                    "maximum": 1,
                                                    "next_start": "2016-...15:00:..",
                                                    "next_end": "2016-...15:00:.."
                                                }
                                            }
                                        ],
                                        "gates": [
                                            {
                                                "type": "qrcode",
                                                "identifier": "PARKU3KU",
                                                "gateways": [
                                                    {
                                                        "type": "api",
                                                        "name": "PRK-123"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "clusters": {
                                    "type": "array",
                                    "description": "A cluster contains meta information about the locations inside a specific area. The cluster itself contains 2 levels.\nThe first level groups the second level clusters that are given by the field `includes`.\n\nFirst level clusters are great for display on maps as we make sure that those clusters have a certain distance to\neach other.\n\nSecond level clusters are great for being displayed in a list as they all have a distinct name and a parent\ncity/country that can be used for grouping them. These clusters work on 3 predefined levels:\n    - postcode: contains only locations with same postcode\n    - city: contains only locations in same city\n    - country: contains only locations in same country\nWhich level is returned depends on the bounding box size of your request.",
                                    "items": {}
                                },
                                "locations": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    }
                },
                "summary": "List Clusters",
                "description": "Returns a list of locations and clusters. Clusters are returned if there are too\nmany locations to return for a specific part of the bounding box.\nYou have to execute multiple hierarchical requests to get all locations from the\nclusters.\n\nThe parameters named `filter_*` filter the returned results using the following logic:\n\n```\navailable\nAND bookable\nAND (type1 OR type2 OR ...)\nAND (price1 OR price2 OR ...)\nAND (properties1 AND properties2 AND ...)\n```",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "sw",
                        "in": "query",
                        "description": "Comma separated latitude and longitude of the southwest position.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "ne",
                        "in": "query",
                        "description": "Comma separated latitude and longitude of the northeast position.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "10-27T09:10:20+00:00 (ISO 8601, optional) - Filter parking spaces for the start date.\n`date_start` will have no effect unless `date_end` is also provided.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "10-27T10:10:20+00:00 (ISO 8601, optional) - Filter parking spaces for the end date.\n`date_end` will have no effect unless `date_start` is also provided.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "filter_available",
                        "in": "query",
                        "description": "Filters returned locations regarding their availability if start and\nend are also given.\n\n* `true` only returns available locations\n\n* `false` return all locations",
                        "required": false,
                        "type": "boolean",
                        "default": "false",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "filter_bookable",
                        "in": "query",
                        "description": "Filters returned locations regarding their general bookability.\n\n* `true` only returns locations that could be booked through the api if they are available\n\n* `false` only returns locations that can not be booked through the api, even though they might be available",
                        "required": false,
                        "type": "boolean",
                        "enum": [
                            "true",
                            "false"
                        ]
                    },
                    {
                        "name": "filter_type",
                        "in": "query",
                        "description": "Filters the result to only show parking spaces with\nwith either of the provided types.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "off-street",
                            "park-and-ride",
                            "professional-garage",
                            "airport-parking",
                            "harbor-parking"
                        ]
                    },
                    {
                        "name": "filter_price",
                        "in": "query",
                        "description": "\nFilters the result to only show parking spaces with\neither of the provided rates.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "rate_hourly",
                            "rate_daily",
                            "rate_weekly",
                            "rate_monthly"
                        ]
                    },
                    {
                        "name": "filter_properties",
                        "in": "query",
                        "description": "Filters the result to only show parking spaces\nall the provided properties.\n",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "excess_length",
                            "indoor",
                            "patio",
                            "disabled",
                            "charging_station",
                            "key_necessary",
                            "long_term_booking",
                            "surveillance",
                            "valet_service",
                            "barrier"
                        ]
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Response will only contain the fields mentioned in this parameter.\nThis can either be `all` or an comma separated list of field names from the response, e.g. `id,street,country`.\n",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/locations/{parking_space_group_id}/availability": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Displays the availability times for a parking space group. Availability times are based on week days, but can also\nhave a specific date for their beginning and end, in which case you might get different results based on the `date_start`\nand `date_end` parameters. All availability times that are valid between a specific begin and end date form an availability period.\n\nThe result contains the times for every weekday,\nwhile weekday 1 is monday and a weekday can contain multiple non overlapping times.\nIf the availability period has no defined `begin` and `end`, then these values will be `null` and the period is\nvalid from infinite past to infinite future.\n\n__Caution__: This is the general availablity and does not include bookings and reservations.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Get availability times for location",
                "description": "",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "parking_space_group_id",
                        "in": "path",
                        "description": "Identifier of a parking space group.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_start",
                        "in": "query",
                        "description": "10-27T09:10:20+00:00 (ISO 8601, optional) - Start of time frame to include periods.\nIf `date_start` is provided, `date_end` is required and vice versa.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "date_end",
                        "in": "query",
                        "description": "10-27T10:10:20+00:00 (ISO 8601, optional)\nsee `date_start`.\n",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/locations/{location_id}/terms": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/xhtml+xml": "<!DOCTYPE html>\n  <html xmlns=\"http://www.w3.org/1999/xhtml\"...\n"
                        }
                    }
                },
                "summary": "Retrieve Terms and Conditions",
                "description": "_Deprecated_ This endpoint is deprecated. `/settings` endpoint should be used instead.\n\nEach location can have different terms and conditions.\nWith this endpoint you can retrieve location based terms and conditions.",
                "tags": [
                    "Locations"
                ],
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "Identifier of the location.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/xhtml+xml"
                ]
            }
        },
        "/login": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {},
                        "schema": {
                            "$ref": "#/definitions/Login Response"
                        }
                    }
                },
                "summary": "Login",
                "description": "Checks the given credentials email and password for validity.\nReturns the user object with a user token needed for private endpoints. A public key is needed.\nAll further requests using the token as HTTP Basic Auth username are made on behalf of the user.\n\nLogin through Facebook is described in a separate endpoint.",
                "tags": [
                    "Login"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "email",
                                "password"
                            ],
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/onstreet": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "101012",
                                "latitude": 53.123412,
                                "longitude": 13.123412,
                                "name": "Berlin 101012",
                                "hours": "Mon-Fri, 08:00 - 22:30",
                                "price": {
                                    "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                    "currency": "EUR"
                                },
                                "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                "duration_max_minutes`": 760,
                                "available_durations": [
                                    15,
                                    30,
                                    45
                                ],
                                "available_payment_methods": [
                                    "28aded77-138f-11e7-bae4-0242ac120005"
                                ],
                                "currently_valid": true
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the parking zone id"
                                },
                                "latitude": {
                                    "type": "number",
                                    "description": "latitude of the requested point"
                                },
                                "longitude": {
                                    "type": "number",
                                    "description": "longitude of the requested point"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "the parking space zone name"
                                },
                                "hours": {
                                    "type": "string",
                                    "description": "the translated availability time in this zone"
                                },
                                "price": {
                                    "type": "object",
                                    "properties": {
                                        "description": {
                                            "type": "string",
                                            "description": "description of the price"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    },
                                    "description": "information about the price for this zone"
                                },
                                "max_datetime_end": {
                                    "type": "string",
                                    "description": "Latest time when a booking has to end. Bookings that are not stopped after this time will be automatically stopped on backend side."
                                },
                                "duration_max_minutes`": {
                                    "type": "number",
                                    "description": "Maximum time the booking can be running in minutes. Bookings that are not stopped after this amount of time will be automatically stopped on backend side."
                                },
                                "available_durations": {
                                    "type": "array",
                                    "description": "array containing the possible parking durations.",
                                    "items": {}
                                },
                                "available_payment_methods": {
                                    "type": "array",
                                    "description": "list of payment method ids that can be used to pay for a booking in this zone.",
                                    "items": {}
                                },
                                "currently_valid": {
                                    "type": "boolean",
                                    "description": "defines it is valid to book the zone at the current point in time, if this is `false` that means that that you are out of the opening hours of the zone."
                                }
                            },
                            "required": [
                                "id",
                                "latitude",
                                "longitude",
                                "price",
                                "max_datetime_end",
                                "duration_max_minutes`"
                            ]
                        }
                    },
                    "404": {
                        "description": "Returned when there is no zone available at this latitude/longitude.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Retrieve Onstreet Zone Information",
                "description": "Access needs at least a __public key__.\n\nThis request returns parking zone information about a specific point on the map.",
                "tags": [
                    "Onstreet"
                ],
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "latitude of the requested point",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "longitude of the requested point",
                        "required": true,
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/onstreet/start": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Returned if a booking was created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
                                "license_plate": "B-AB 1234",
                                "phone_number": "+493057701872",
                                "reference": "HRS5J",
                                "date_start": "2016-10-27T10:00:00+0000",
                                "date_end": "2016-10-27T16:30:00+0000",
                                "price": {
                                    "total": 425,
                                    "parking_fee": 375,
                                    "transaction_fee": 25,
                                    "payment_provider_fee": 25,
                                    "currency": "EUR"
                                },
                                "violation": {
                                    "id": "005c4826-4e28-11e3-a675-d43d7eece53d"
                                },
                                "status": "active",
                                "type": "location",
                                "group_id": "123c4826-4e28-11e3-a675-d43d7eece53d",
                                "parking_space_code": "ABCDE",
                                "location": {
                                    "id": "e644e4bc-4c5c-11e4-a24a-d43d7eecedd2",
                                    "address_slug": "dorfstrasse-11",
                                    "latitude": 52.60826,
                                    "longitude": 13.19988,
                                    "street": "Dorfstraße",
                                    "street_number": "11",
                                    "postcode": "16761",
                                    "city": "Hennigsdorf",
                                    "country": "Deutschland",
                                    "bookable": true,
                                    "payment": {
                                        "methods": [
                                            "paypal"
                                        ],
                                        "types": [
                                            "post"
                                        ]
                                    },
                                    "availability": {
                                        "current": 0,
                                        "maximum": 1,
                                        "next_start": "2016-...15:00:..",
                                        "next_end": "2016-...15:00:.."
                                    },
                                    "parking_space_groups": [
                                        {
                                            "id": "1644c5dc-4c5c-11e4-a24a-d43d7eecedd2",
                                            "type": "off-street",
                                            "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten.",
                                            "image_urls": [
                                                "https://parku.de/images/parkingspace/020a81f5-c8b9-11e4-bfd2-d43d7eece658/640x286.jpg"
                                            ],
                                            "options": [
                                                "excess length"
                                            ],
                                            "support": {
                                                "phone_number": "+493012064329"
                                            },
                                            "price": {
                                                "total": 150,
                                                "currency": "EUR",
                                                "period": "timeframe",
                                                "rate_hourly": 10,
                                                "rate_daily": 100,
                                                "rate_weekly": 300,
                                                "rate_monthly": 1500
                                            },
                                            "user_owned": false,
                                            "settings": {
                                                "bookable_range_start": -15,
                                                "bookable_range_end": 43200,
                                                "booking_duration_min": 30,
                                                "booking_duration_max": 43200
                                            },
                                            "required_fields": [
                                                "car_registration_number"
                                            ],
                                            "provider": "parku",
                                            "availability": {
                                                "current": 0,
                                                "maximum": 1,
                                                "next_start": "2016-...15:00:..",
                                                "next_end": "2016-...15:00:.."
                                            }
                                        }
                                    ],
                                    "gates": [
                                        {
                                            "type": "qrcode",
                                            "identifier": "PARKU3KU",
                                            "gateways": [
                                                {
                                                    "type": "api",
                                                    "name": "PRK-123"
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "zone": {
                                    "id": "101012",
                                    "latitude": 53.123412,
                                    "longitude": 13.123412,
                                    "name": "Berlin 101012",
                                    "hours": "Mon-Fri, 08:00 - 22:30",
                                    "price": {
                                        "description": "15 Min. gebührenfrei, danach 50 Cent pro 30 Min.",
                                        "currency": "EUR"
                                    },
                                    "max_datetime_end": "2009-06-30T18:30:00+02:00",
                                    "duration_max_minutes`": 760
                                },
                                "extend": {
                                    "date_start": "2016-10-27T10:00:00+0000",
                                    "date_end": "2016-10-27T12:00:00+0000",
                                    "minutes": 60,
                                    "price": 125,
                                    "currency": "EUR"
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "license_plate": {
                                    "type": "string"
                                },
                                "phone_number": {
                                    "type": "string"
                                },
                                "reference": {
                                    "type": "string"
                                },
                                "date_start": {
                                    "type": "string"
                                },
                                "date_end": {
                                    "type": "string"
                                },
                                "price": {
                                    "type": "object",
                                    "properties": {
                                        "total": {
                                            "type": [
                                                "number",
                                                "null"
                                            ],
                                            "description": "the overall amount to pay for the booking"
                                        },
                                        "parking_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "transaction_fee": {
                                            "type": "number",
                                            "description": "the transaction fee included in `amount`"
                                        },
                                        "payment_provider_fee": {
                                            "type": "number",
                                            "description": "the payment provider fee included in `amount`"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                },
                                "violation": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "violation id"
                                        }
                                    }
                                },
                                "status": {
                                    "type": "string",
                                    "description": "status of the booking, can be `active` or `canceled` for `offstreet` bookings and `running`, `finished` or 'canceled' for `onstreet` bookings"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "offstreet",
                                        "onstreet"
                                    ],
                                    "description": "the booking type"
                                },
                                "group_id": {
                                    "type": "string",
                                    "description": "the id of the booked parking space group"
                                },
                                "parking_space_code": {
                                    "type": "string",
                                    "description": "the code of the booked parking space"
                                },
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "unique identifier of the location used for referencing."
                                        },
                                        "address_slug": {
                                            "type": "string"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude part of the location geo coordinate"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude part of the location geo"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "the street name of the location without number"
                                        },
                                        "street_number": {
                                            "type": "string",
                                            "description": "the street number of the location"
                                        },
                                        "postcode": {
                                            "type": "string",
                                            "description": "post code of the location"
                                        },
                                        "city": {
                                            "type": "string",
                                            "description": "city of the location"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "country of the location in 2 character encoding  country of the location in 2\n\ncharacter encoding"
                                        },
                                        "bookable": {
                                            "type": "boolean",
                                            "description": "`true` if that locations can be booked via the parku API, `false` if the location\n\nis purely providing information"
                                        },
                                        "payment": {
                                            "type": "object",
                                            "properties": {
                                                "methods": {
                                                    "type": "array",
                                                    "description": "Possible payment methods for this location and user",
                                                    "items": {}
                                                },
                                                "types": {
                                                    "type": "array",
                                                    "description": "Possible payment types for this location and user",
                                                    "items": {}
                                                }
                                            },
                                            "description": "available payment methods and types for the current user in this location. The payment methods and types depend on the private key of the logged in user. For locations requests using public keys these arrays will be empty."
                                        },
                                        "availability": {
                                            "type": "object",
                                            "properties": {
                                                "current": {
                                                    "type": "number",
                                                    "description": "the number of parking spaces available in the group for the requested time period defined\n\nby `start` and `end`the number of parking spaces available in the group for the requested time period defined by\n`start` and `end`"
                                                },
                                                "maximum": {
                                                    "type": "number",
                                                    "description": "the overall number of parking spaces at this group the overall number of parking spaces at\n\nthis group"
                                                },
                                                "next_start": {
                                                    "type": "string",
                                                    "description": "the start of the next from now slot in which a parking space in this\n\ngroup is free and bookable, can be in the past"
                                                },
                                                "next_end": {
                                                    "type": "string",
                                                    "description": "the end of the next slot from now in which a parking space in this group\n\nis free and bookable, can be in the past"
                                                }
                                            },
                                            "description": "describes the availability of the location in relation to the request"
                                        },
                                        "parking_space_groups": {
                                            "type": "array",
                                            "description": "different parking space groups for this location. See [Parking Space Group Data](#header-parking-space-group-data)",
                                            "items": {}
                                        },
                                        "gates": {
                                            "type": "array",
                                            "description": "the gates connected to the location",
                                            "items": {}
                                        }
                                    },
                                    "description": "the location that was booked, only available if `type` is `offstreet`."
                                },
                                "zone": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the parking zone id"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude of the requested point"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude of the requested point"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "the parking space zone name"
                                        },
                                        "hours": {
                                            "type": "string",
                                            "description": "the translated availability time in this zone"
                                        },
                                        "price": {
                                            "type": "object",
                                            "properties": {
                                                "description": {
                                                    "type": "string",
                                                    "description": "description of the price"
                                                },
                                                "currency": {
                                                    "type": "string",
                                                    "enum": [
                                                        "EUR",
                                                        "CHF"
                                                    ],
                                                    "description": "the currency of the price"
                                                }
                                            },
                                            "description": "information about the price for this zone"
                                        },
                                        "max_datetime_end": {
                                            "type": "string",
                                            "description": "Latest time when a booking has to end. Bookings that are not stopped after this time will be automatically stopped on backend side."
                                        },
                                        "duration_max_minutes`": {
                                            "type": "number",
                                            "description": "Maximum time the booking can be running in minutes. Bookings that are not stopped after this amount of time will be automatically stopped on backend side."
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "latitude",
                                        "longitude",
                                        "price",
                                        "max_datetime_end",
                                        "duration_max_minutes`"
                                    ],
                                    "description": "the zone that was booked, only available if `type` is `onstreet`."
                                },
                                "extend": {
                                    "type": "object",
                                    "properties": {
                                        "date_start": {
                                            "type": "string",
                                            "description": "start date of the extended booking"
                                        },
                                        "date_end": {
                                            "type": "string",
                                            "description": "end date of the extended booking"
                                        },
                                        "minutes": {
                                            "type": "number",
                                            "description": "length of extension in minutes"
                                        },
                                        "price": {
                                            "type": "number",
                                            "description": "price of the extension"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "enum": [
                                                "EUR",
                                                "CHF"
                                            ],
                                            "description": "the currency of the price"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Returned if parking zone was not found, or it is already booked.",
                        "headers": {},
                        "examples": {}
                    },
                    "422": {
                        "description": "Returned if either one of the provided zone fields didn't match or the payment information was not processable.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Start an Onstreet Booking",
                "description": "Access needs at least a __private key__.\n\nBookings can be stopped using the [Stop a Booking](#stop-a-booking) action.\n\nThe request requires some of the values that were received by the\n[Retrieve Onstreet Zone Information](#retrieve-onstreet-zone-information) request.\nThese values are checked against the booking that is started with the onstreet provider to ensure that the pricing\nis as expected. The optional attributes of the parking zone object here are mainly used for logging.",
                "tags": [
                    "Onstreet"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "zone": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the parking zone id"
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "description": "latitude of the requested point"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "longitude of the requested point"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "latitude",
                                        "longitude"
                                    ],
                                    "description": "the parking zone object to start the booking on"
                                },
                                "payment_method": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "the payment method id,\n\nonly needed if type is `immediate`"
                                        },
                                        "type": {
                                            "type": "string",
                                            "enum": [
                                                "immediate"
                                            ],
                                            "description": "How to execute the payment. Currently only immediate\n\npayments are supported."
                                        }
                                    },
                                    "required": [
                                        "type"
                                    ],
                                    "description": "information about payment method."
                                },
                                "license_plate": {
                                    "type": "string",
                                    "description": "the license plate of the car used for parking"
                                },
                                "phone_number": {
                                    "type": "string",
                                    "description": "the customer phone number"
                                },
                                "duration_minutes": {
                                    "type": "number",
                                    "description": "the parking duration, required if the retrieved zone had entries in the `available_durations` field."
                                },
                                "user_metadata": {
                                    "type": "object",
                                    "properties": {
                                        "latitude": {
                                            "type": "number",
                                            "description": "users latitude"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "description": "users longitude"
                                        }
                                    },
                                    "description": "Additional information about a user (optional). This is for example latitude/longitude parameters\nfor the users current position."
                                }
                            },
                            "required": [
                                "zone",
                                "payment_method",
                                "license_plate",
                                "phone_number"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/password": {
            "put": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Update password",
                "description": "Access needs a __private key__.",
                "tags": [
                    "Password"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "required": [
                                "old_password",
                                "new_password"
                            ],
                            "properties": {
                                "old_password": {
                                    "type": "string"
                                },
                                "new_password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "get": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "The given email address is not found in the database.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Reset password",
                "description": "Access needs a __public key__.\n\nThis sends an email with the newly set password to the users email address.",
                "tags": [
                    "Password"
                ],
                "parameters": [
                    {
                        "name": "for",
                        "in": "query",
                        "description": "A valid email address of the user.",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/payment/creditcards": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": [
                                {
                                    "id": "gphsyb",
                                    "type": "Visa",
                                    "number": "400934******1881",
                                    "expiration_date": "05/2020",
                                    "image_url": "https://assets.braintreegateway.com/payment_method_logo/visa.png?environment=sandbox&merchant_id=8fbxty8dhjmy8g4j"
                                },
                                {
                                    "id": "6tvts6",
                                    "type": "Visa",
                                    "number": "411111******1111",
                                    "expiration_date": "01/2014",
                                    "image_url": "https://assets.braintreegateway.com/payment_method_logo/visa.png?environment=sandbox&merchant_id=8fbxty8dhjmy8g4j"
                                }
                            ]
                        }
                    }
                },
                "summary": "List Credit Cards",
                "description": "Shows all credit cards the user used before.",
                "tags": [
                    "Payment"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/payment/credit_cards/{credit_card_id}": {
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a Credit Card",
                "description": "",
                "tags": [
                    "Payment"
                ],
                "parameters": [
                    {
                        "name": "credit_card_id",
                        "in": "path",
                        "description": "The identifier of the credit card to delete.\nYou'll receive a list of the users credit cards through the `GET /payment/creditcards` request.\n",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/phone_numbers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "List all Phone Numbers",
                "description": "Returns a list of all phone numbers of the user.\nThe phone numbers are returned sorted by creation date, with the most recently created phone number appearing first.",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": []
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "151",
                                "phone_number": "+493057701873"
                            }
                        }
                    }
                },
                "summary": "Create a New Phone Number",
                "description": "You can store multiple phone numbers for a user.\n\n#### Body Parameters",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "phone_number": {
                                    "type": "string",
                                    "description": "The phone number."
                                }
                            },
                            "required": [
                                "phone_number"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/phone_numbers/{phone_number_id}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 151,
                                "phone_number": "+493057701873"
                            }
                        }
                    }
                },
                "summary": "Retrieve a Phone Number",
                "description": "",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": [
                    {
                        "name": "phone_number_id",
                        "in": "path",
                        "description": "The identifier of the phone number to be retrieved.",
                        "required": true,
                        "type": "number"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": 151,
                                "phone_number": "+493057701874"
                            }
                        }
                    }
                },
                "summary": "Update a Phone Number",
                "description": "#### Body Parameters",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "phone_number_id": {
                                    "type": "number",
                                    "description": "The identifier of the phone number to be updated."
                                }
                            },
                            "required": [
                                "phone_number_id"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a Phone Number",
                "description": "",
                "tags": [
                    "Phone Numbers"
                ],
                "parameters": [
                    {
                        "name": "phone_number_id",
                        "in": "path",
                        "description": "The identifier of the phone number to be deleted.",
                        "required": true,
                        "type": "number"
                    }
                ]
            }
        },
        "/sesam/{sesam_id}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "Everything went fine. The gate/barrier connected to the sesam device should open in the next few seconds.",
                        "headers": {},
                        "examples": {}
                    },
                    "401": {
                        "description": "The code is valid, but the user does not have the permissions to use this sesam device.\nEither no booking is made or the time for opening the sesam has expired.",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "The QR code is not valid. Either it is not a parku QR code or the QR code is outdated.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Open Sesam",
                "description": "",
                "tags": [
                    "Sesam"
                ],
                "parameters": [
                    {
                        "name": "sesam_id",
                        "in": "path",
                        "description": "The sesam ID which is hidden in the QR code.",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/sesam": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returned if a booking with a sesam device is available.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "support": {
                                    "phone_number": {
                                        "phone_number": "+49 123 456 789"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No booking with a sesam device available.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Check Sesam",
                "description": "This endpoint gives you the information whether the user can open a sesam device now or in the near future.",
                "tags": [
                    "Sesam"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/settings": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "location": {
                                    "bookable_range_start": -15,
                                    "bookable_range_end": 43200,
                                    "booking_duration_min": 30,
                                    "booking_duration_max": 43200
                                },
                                "sesam": {
                                    "bluetooth": {
                                        "connection_trials": 2,
                                        "connection_timeout": 2,
                                        "communication_timeout": 2
                                    }
                                },
                                "gps": {
                                    "ttl": 60,
                                    "accuracy": 1000
                                },
                                "booking": {
                                    "collection": {
                                        "ttl": 60
                                    },
                                    "notification": {
                                        "time_to_leave": {
                                            "enabled": true,
                                            "type": "time",
                                            "time": {
                                                "minutes": -5,
                                                "relative_to": "begin",
                                                "include_distance": true
                                            }
                                        },
                                        "near_location": {
                                            "enabled": true,
                                            "type": "time",
                                            "radius": 500
                                        },
                                        "near_entry": {
                                            "enabled": true,
                                            "type": "time",
                                            "radius": 50
                                        },
                                        "expiring": {
                                            "enabled": true,
                                            "type": "time",
                                            "time": {
                                                "minutes": -5,
                                                "relative_to": "begin",
                                                "include_distance": true
                                            }
                                        },
                                        "over": {
                                            "enabled": true,
                                            "type": "time",
                                            "time": {
                                                "minutes": -5,
                                                "relative_to": "begin",
                                                "include_distance": true
                                            }
                                        }
                                    },
                                    "fields": {
                                        "additional_services": {
                                            "label": "zusätzliche Dienste",
                                            "type": "text"
                                        }
                                    }
                                },
                                "features": {
                                    "recommend_update": {
                                        "enabled": true
                                    },
                                    "force_update": {
                                        "enabled": true
                                    },
                                    "non_bookable_ps_visible": {
                                        "enabled": true
                                    },
                                    "smart_device_link_enabled": {
                                        "enabled": true
                                    }
                                },
                                "provider": {
                                    "image": "http://provider/image.png",
                                    "thumbnail": "http://provider/thumbnail.png",
                                    "header": "Please provide the data necessary for booking the parking space.",
                                    "legals": {
                                        "accept": {
                                            "url": "http://www.provider.com/terms_and_conditions.html",
                                            "text": "Please accept the parking providers' %TERMS_LINK%."
                                        },
                                        "show": {
                                            "url": "http://www.provider.com/terms_and_conditions.html",
                                            "text": "Please accept the parking providers' %TERMS_LINK%."
                                        }
                                    }
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "location": {
                                    "type": "object",
                                    "properties": {
                                        "bookable_range_start": {
                                            "type": "number",
                                            "description": "start of the range wherein a booking is allowed in minutes from now."
                                        },
                                        "bookable_range_end": {
                                            "type": "number",
                                            "description": "end of the range wherein a booking is allowed in minutes from now."
                                        },
                                        "booking_duration_min": {
                                            "type": "number",
                                            "description": "minimum duration of a booking in minutes."
                                        },
                                        "booking_duration_max": {
                                            "type": "number",
                                            "description": "maximum duration of a booking in minutes."
                                        }
                                    },
                                    "description": "provides the booking requirements for a parking space.\n\nEvery location can have its own settings but these will always be the same or within the limits of the global settings."
                                },
                                "sesam": {
                                    "type": "object",
                                    "properties": {
                                        "bluetooth": {
                                            "type": "object",
                                            "properties": {
                                                "connection_trials": {
                                                    "type": "number",
                                                    "description": "Amount of tries to connect to a sesam box."
                                                },
                                                "connection_timeout": {
                                                    "type": "number",
                                                    "description": "Amount of seconds allowed to connect to a box."
                                                },
                                                "communication_timeout": {
                                                    "type": "number",
                                                    "description": "Second until canceling the communication with the sesam box."
                                                }
                                            }
                                        }
                                    },
                                    "description": "contains informations about how to work with the sesam boxes."
                                },
                                "gps": {
                                    "type": "object",
                                    "properties": {
                                        "ttl": {
                                            "type": "number",
                                            "description": "Time-To-Live for previously retrieved GPS data i.e. by operation system"
                                        },
                                        "accuracy": {
                                            "type": "number",
                                            "description": "Accuracy of GPS data in meters, renders data invalid if exceeded"
                                        }
                                    },
                                    "description": "contains information on how to handle GPS data."
                                },
                                "booking": {
                                    "type": "object",
                                    "properties": {
                                        "collection": {
                                            "type": "object",
                                            "properties": {
                                                "ttl": {
                                                    "type": "number",
                                                    "description": "Time-To-Live for previously retrieved booking list"
                                                }
                                            }
                                        },
                                        "notification": {
                                            "type": "object",
                                            "properties": {
                                                "time_to_leave": {
                                                    "type": "object",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "wether the notification is enabled"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "time",
                                                                "region"
                                                            ],
                                                            "description": "type of the notification"
                                                        },
                                                        "time": {
                                                            "type": "object",
                                                            "properties": {
                                                                "minutes": {
                                                                    "type": "number"
                                                                },
                                                                "relative_to": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "begin",
                                                                        "end"
                                                                    ]
                                                                },
                                                                "include_distance": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "near_location": {
                                                    "type": "object",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "wether the notification is enabled"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "time",
                                                                "region"
                                                            ],
                                                            "description": "type of the notification"
                                                        },
                                                        "radius": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "near_entry": {
                                                    "type": "object",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "wether the notification is enabled"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "time",
                                                                "region"
                                                            ],
                                                            "description": "type of the notification"
                                                        },
                                                        "radius": {
                                                            "type": "number"
                                                        }
                                                    }
                                                },
                                                "expiring": {
                                                    "type": "object",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "wether the notification is enabled"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "time",
                                                                "region"
                                                            ],
                                                            "description": "type of the notification"
                                                        },
                                                        "time": {
                                                            "type": "object",
                                                            "properties": {
                                                                "minutes": {
                                                                    "type": "number"
                                                                },
                                                                "relative_to": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "begin",
                                                                        "end"
                                                                    ]
                                                                },
                                                                "include_distance": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "over": {
                                                    "type": "object",
                                                    "properties": {
                                                        "enabled": {
                                                            "type": "boolean",
                                                            "description": "wether the notification is enabled"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "time",
                                                                "region"
                                                            ],
                                                            "description": "type of the notification"
                                                        },
                                                        "time": {
                                                            "type": "object",
                                                            "properties": {
                                                                "minutes": {
                                                                    "type": "number"
                                                                },
                                                                "relative_to": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "begin",
                                                                        "end"
                                                                    ]
                                                                },
                                                                "include_distance": {
                                                                    "type": "boolean"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Each notification contains an enabled flag. If set to `true`, the notification is enabled and should appear. If set to `false`, that notification is disabled."
                                        },
                                        "fields": {
                                            "type": "object",
                                            "properties": {
                                                "additional_services": {
                                                    "type": "object",
                                                    "properties": {
                                                        "label": {
                                                            "type": "string"
                                                        },
                                                        "type": {
                                                            "type": "string",
                                                            "enum": [
                                                                "text",
                                                                "datetime",
                                                                "date",
                                                                "time",
                                                                "number",
                                                                "tel",
                                                                "boolean"
                                                            ]
                                                        }
                                                    }
                                                }
                                            },
                                            "description": "Each additional field uses its name as a `key` to a dictionary containing the field `label` and `type`. label contains the translated name of the field. The translation of the label is determined by the language of user who is identified by the provided user token."
                                        }
                                    },
                                    "description": "contains information on how to handle bookings."
                                },
                                "features": {
                                    "type": "object",
                                    "properties": {
                                        "recommend_update": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "defines wether the flag is enabled"
                                                }
                                            }
                                        },
                                        "force_update": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "defines wether the flag is enabled"
                                                }
                                            }
                                        },
                                        "non_bookable_ps_visible": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "defines wether the flag is enabled"
                                                }
                                            }
                                        },
                                        "smart_device_link_enabled": {
                                            "type": "object",
                                            "properties": {
                                                "enabled": {
                                                    "type": "boolean",
                                                    "description": "defines wether the flag is enabled"
                                                }
                                            }
                                        }
                                    },
                                    "description": "Feature flags that enables or disables certaint features based parameters given in header. These feature flags can be different for each operation systems."
                                },
                                "provider": {
                                    "type": "object",
                                    "properties": {
                                        "image": {
                                            "type": "string",
                                            "description": "Large provider logo."
                                        },
                                        "thumbnail": {
                                            "type": "string",
                                            "description": "Provider logo thumbnail."
                                        },
                                        "header": {
                                            "type": "string",
                                            "description": "Translated header text for required fields."
                                        },
                                        "legals": {
                                            "type": "object",
                                            "properties": {
                                                "accept": {
                                                    "type": "object",
                                                    "properties": {
                                                        "url": {
                                                            "type": "string",
                                                            "description": "link to terms and conditions"
                                                        },
                                                        "text": {
                                                            "type": "string",
                                                            "description": "prompt for accepting the terms and conditions. Replace `%TERMS_LINK%` with the `url`"
                                                        }
                                                    },
                                                    "description": "List of terms and conditions entries which the user needs to accept by some action (like checkbox)."
                                                },
                                                "show": {
                                                    "type": "object",
                                                    "properties": {
                                                        "url": {
                                                            "type": "string",
                                                            "description": "link to terms and conditions"
                                                        },
                                                        "text": {
                                                            "type": "string",
                                                            "description": "prompt for accepting the terms and conditions. Replace `%TERMS_LINK%` with the `url`"
                                                        }
                                                    },
                                                    "description": "List of terms and conditions entries which the user needs only to see."
                                                }
                                            },
                                            "description": "Contains two lists for terms and conditions entries where you can find text and url for each."
                                        }
                                    },
                                    "description": "Information for parking space provider. Key is linked with location response field `provider`."
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve Settings",
                "description": "This endpoint exposes the global settings for the ParkU-platform.\nChanging the settings is not possible.",
                "tags": [
                    "Settings"
                ],
                "parameters": [
                    {
                        "name": "lat",
                        "in": "query",
                        "description": "Latitude of current location.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "lon",
                        "in": "query",
                        "description": "Longitude of current location.",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/settings/booking/notification/{notification_key}": {
            "put": {
                "responses": {
                    "204": {
                        "description": "Updated successfully.",
                        "headers": {},
                        "examples": {}
                    },
                    "304": {
                        "description": "Value of notification was not modified.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Enable/Disable Notification",
                "description": "#### Body Parameters",
                "tags": [
                    "Settings"
                ],
                "parameters": [
                    {
                        "name": "notification_key",
                        "in": "path",
                        "description": "\nA notification key\n",
                        "required": true,
                        "type": "string",
                        "enum": [
                            "time_to_leave",
                            "near_location",
                            "entry",
                            "expiring",
                            "over"
                        ]
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "The value for the notification key."
                                }
                            },
                            "required": [
                                "enabled"
                            ]
                        }
                    }
                ]
            }
        },
        "/terms": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/xhtml+xml": "<!DOCTYPE html>\n    <html xmlns=\"http://www.w3.org/1999/xhtml\"...\n"
                        }
                    }
                },
                "summary": "Retrieve Terms and Conditions",
                "description": "",
                "tags": [
                    "Static Pages"
                ],
                "parameters": [],
                "produces": [
                    "application/xhtml+xml"
                ]
            }
        },
        "/imprint": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/xhtml+xml": "<!DOCTYPE html>\n    <html xmlns=\"http://www.w3.org/1999/xhtml\"...\n"
                        }
                    }
                },
                "summary": "Retrieve Imprint",
                "description": "",
                "tags": [
                    "Static Pages"
                ],
                "parameters": [],
                "produces": [
                    "application/xhtml+xml"
                ]
            }
        },
        "/privacy_policy": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/xhtml+xml": "<!DOCTYPE html>\n    <html xmlns=\"http://www.w3.org/1999/xhtml\"...\n"
                        }
                    }
                },
                "summary": "Retrieve Privacy Policy",
                "description": "",
                "tags": [
                    "Static Pages"
                ],
                "parameters": [],
                "produces": [
                    "application/xhtml+xml"
                ]
            }
        },
        "/user": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Returned when the user was successfully created",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": "KFJ32",
                                "gender": "female",
                                "age_range": "26 - 35",
                                "email": "test@example.com",
                                "firstname": "Test",
                                "lastname": "Name",
                                "credit": "0",
                                "currency": "EUR",
                                "country": "DE",
                                "facebook_id": "null",
                                "cars": {
                                    "id": "12",
                                    "license_plate": "B-AB 1234",
                                    "vehicle": "Isetta",
                                    "country": "null"
                                },
                                "phone_numbers": {
                                    "id": "16696",
                                    "phone_number": "099028-237489"
                                },
                                "attributes": {
                                    "id": "1",
                                    "key": "adac",
                                    "value": "1234567890"
                                },
                                "token": "098f6bcd4621d373cade4e832627b4f6"
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "age_range": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "credit": {
                                    "type": "string"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "facebook_id": {
                                    "type": "string"
                                },
                                "cars": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "license_plate": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "phone_numbers": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "phone_number": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Create a User",
                "description": "Access needs a __public key__.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string",
                                    "enum": [
                                        "DE",
                                        "CH"
                                    ]
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ]
                                },
                                "age_range": {
                                    "type": "string",
                                    "enum": [
                                        "18 - 25",
                                        "26 - 35",
                                        "36 - 45",
                                        "46+"
                                    ]
                                },
                                "facebook_id": {
                                    "type": "string"
                                },
                                "cars": {
                                    "type": "array"
                                },
                                "phone_numbers": {
                                    "type": "array"
                                },
                                "attributes": {
                                    "type": "array"
                                },
                                "device_id": {
                                    "type": "string",
                                    "description": "identifier for the mobile device on that the registration is done, e.g. advertisement id for Android or iOS"
                                }
                            },
                            "required": [
                                "email",
                                "password",
                                "country",
                                "firstname",
                                "lastname"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": "KFJ32",
                                "gender": "female",
                                "age_range": "26 - 35",
                                "email": "test@example.com",
                                "firstname": "Test",
                                "lastname": "Name",
                                "credit": "0",
                                "currency": "EUR",
                                "country": "DE",
                                "facebook_id": "null",
                                "cars": {
                                    "id": "12",
                                    "license_plate": "B-AB 1234",
                                    "vehicle": "Isetta",
                                    "country": "null"
                                },
                                "phone_numbers": {
                                    "id": "16696",
                                    "phone_number": "099028-237489"
                                },
                                "attributes": {
                                    "id": "1",
                                    "key": "adac",
                                    "value": "1234567890"
                                },
                                "token": "098f6bcd4621d373cade4e832627b4f6"
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "age_range": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "credit": {
                                    "type": "string"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "facebook_id": {
                                    "type": "string"
                                },
                                "cars": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "license_plate": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "phone_numbers": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "phone_number": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Retrieve a User",
                "description": "Access needs a __private key__.\n\nReturns the user object for the private key.",
                "tags": [
                    "User"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": "KFJ32",
                                "gender": "female",
                                "age_range": "26 - 35",
                                "email": "test@example.com",
                                "firstname": "Test",
                                "lastname": "Name",
                                "credit": "0",
                                "currency": "EUR",
                                "country": "DE",
                                "facebook_id": "null",
                                "cars": {
                                    "id": "12",
                                    "license_plate": "B-AB 1234",
                                    "vehicle": "Isetta",
                                    "country": "null"
                                },
                                "phone_numbers": {
                                    "id": "16696",
                                    "phone_number": "099028-237489"
                                },
                                "attributes": {
                                    "id": "1",
                                    "key": "adac",
                                    "value": "1234567890"
                                },
                                "token": "098f6bcd4621d373cade4e832627b4f6"
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string"
                                },
                                "age_range": {
                                    "type": "string"
                                },
                                "email": {
                                    "type": "string"
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "credit": {
                                    "type": "string"
                                },
                                "currency": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string"
                                },
                                "facebook_id": {
                                    "type": "string"
                                },
                                "cars": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "license_plate": {
                                            "type": "string"
                                        },
                                        "vehicle": {
                                            "type": "string"
                                        },
                                        "country": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "phone_numbers": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "phone_number": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "attributes": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "key": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a user",
                "description": "Access needs a __private key__.\n\nUpdates the user by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request accepts mostly the same arguments as the user creation call.\nChanging cars, phone_numbers, attributes and password is done via separate endpoints.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "country": {
                                    "type": "string",
                                    "enum": [
                                        "DE",
                                        "CH"
                                    ]
                                },
                                "firstname": {
                                    "type": "string"
                                },
                                "lastname": {
                                    "type": "string"
                                },
                                "gender": {
                                    "type": "string",
                                    "enum": [
                                        "female",
                                        "male"
                                    ]
                                },
                                "age_range": {
                                    "type": "string",
                                    "enum": [
                                        "18 - 25",
                                        "26 - 35",
                                        "36 - 45",
                                        "46+"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/user/verify/exists": {
            "get": {
                "responses": {
                    "204": {
                        "description": "Returned if the user exists.",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Returned if the user does not exists.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Check if a User exists",
                "description": "Returns 204 if the user exists and a 404 if the user does not exists. Use this to check the user email before creating a new user.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/user/verify/adac/{code}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Returned if the code is valid.",
                        "headers": {},
                        "examples": {}
                    },
                    "404": {
                        "description": "Returned if the code is invalid.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Check if an ADAC code is valid",
                "description": "Returns 200 if the code is valid and a 404 if the code is invalid.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/user/payment_methods": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": [
                                {
                                    "id": "1000bb3e-506d-11e5-9781-d43d7eece658",
                                    "created_at": "2009-06-30T18:30:00+02:00",
                                    "primary": true,
                                    "validated": "successful",
                                    "provider_type": "stripe",
                                    "provider": {
                                        "customer_id": "cus_123456789",
                                        "source_id": "card_123456789",
                                        "instrument_type": "credit_card",
                                        "instrument": {
                                            "number": "6789",
                                            "type": "Visa",
                                            "expire_month": 12,
                                            "expire_year": 2067,
                                            "country": "DE",
                                            "cvc_check": "pass"
                                        }
                                    },
                                    "fee": {
                                        "percent": 1.4,
                                        "fixed": 25,
                                        "minimum_total": 50
                                    }
                                }
                            ]
                        },
                        "schema": {
                            "type": "array",
                            "items": {}
                        }
                    }
                },
                "summary": "List user payment methods",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "1000bb3e-506d-11e5-9781-d43d7eece658",
                                "created_at": "2009-06-30T18:30:00+02:00",
                                "primary": true,
                                "validated": "successful",
                                "provider_type": "stripe",
                                "provider": {
                                    "customer_id": "cus_123456789",
                                    "source_id": "card_123456789",
                                    "instrument_type": "credit_card",
                                    "instrument": {
                                        "number": "6789",
                                        "type": "Visa",
                                        "expire_month": 12,
                                        "expire_year": 2067,
                                        "country": "DE",
                                        "cvc_check": "pass"
                                    }
                                },
                                "fee": {
                                    "percent": 1.4,
                                    "fixed": 25,
                                    "minimum_total": 50
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the payment method id"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "date when the payment method was created"
                                },
                                "primary": {
                                    "type": "boolean",
                                    "description": "wether this is the primary payment method of the user"
                                },
                                "validated": {
                                    "type": "string",
                                    "enum": [
                                        "successful",
                                        "failed",
                                        "pending"
                                    ],
                                    "description": "Wether the payment method was already validated successfully. Non validated payment methods cannot be used for paying."
                                },
                                "provider_type": {
                                    "type": "string",
                                    "enum": [
                                        "stripe"
                                    ],
                                    "description": "provider type"
                                },
                                "fee": {
                                    "type": "object",
                                    "properties": {
                                        "percent": {
                                            "type": "number",
                                            "description": "the payment provider fee percentage. This percentage is added on top of the overall booking cost. The overall booking cost is calculated by `booking_fee + booking_fee * fee_percentage + fee_fixed`."
                                        },
                                        "fixed": {
                                            "type": "number",
                                            "description": "fixed payment provider fee."
                                        },
                                        "minimum_total": {
                                            "type": "number",
                                            "description": "minimum total amount for a booking transaction. If a booking is cheaper than this, the payment provider fee will be adapted."
                                        }
                                    }
                                }
                            },
                            "required": [
                                "provider_type"
                            ],
                            "oneOf": [
                                {
                                    "properties": {
                                        "provider": {
                                            "type": "object",
                                            "properties": {
                                                "customer_id": {
                                                    "type": "string",
                                                    "description": "stripe customer id"
                                                },
                                                "source_id": {
                                                    "type": "string",
                                                    "description": "stripe source id"
                                                },
                                                "instrument_type": {
                                                    "type": "string",
                                                    "description": "type of payment instrument used for charging"
                                                }
                                            },
                                            "required": [
                                                "customer_id",
                                                "source_id",
                                                "instrument_type"
                                            ],
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "instrument": {
                                                            "type": "object",
                                                            "properties": {
                                                                "number": {
                                                                    "type": "string",
                                                                    "description": "last 4 digits of credit card"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "card type as defined by `brand` at https://stripe.com/docs/api#card_object"
                                                                },
                                                                "expire_month": {
                                                                    "type": "number",
                                                                    "description": "expiration month of the credit card"
                                                                },
                                                                "expire_year": {
                                                                    "type": "number",
                                                                    "description": "expiration year of the credit card"
                                                                },
                                                                "country": {
                                                                    "type": "string",
                                                                    "description": "two letter ISO code representing the country of the card"
                                                                },
                                                                "cvc_check": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "pass",
                                                                        "fail",
                                                                        "unavailable",
                                                                        "unchecked"
                                                                    ],
                                                                    "description": "result of the cvc check if cvc was provided"
                                                                }
                                                            },
                                                            "required": [
                                                                "number",
                                                                "type",
                                                                "expire_month",
                                                                "expire_year",
                                                                "country",
                                                                "cvc_check"
                                                            ],
                                                            "description": "the credit card information"
                                                        }
                                                    },
                                                    "required": [
                                                        "instrument"
                                                    ]
                                                }
                                            ],
                                            "description": "payment using stripe"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Returned if an error occured, e.g. `primary` was set to true for a payment method that doesn't support post payment",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 1001,
                                "message": "Error description."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number",
                                    "description": "error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "error message"
                                }
                            }
                        }
                    }
                },
                "summary": "Add a user payment method",
                "description": "Adds a new payment method for the user.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "primary": {
                                    "type": "boolean",
                                    "description": "Wether the payment method should be activated as the users primary payment method.\nIf another payment method of the user was set to be the primary method before,\nthat one will be be changed to not be the primary one anymore.",
                                    "default": false
                                },
                                "provider_type": {
                                    "type": "string",
                                    "enum": [
                                        "stripe"
                                    ],
                                    "description": "provider type"
                                }
                            },
                            "required": [
                                "provider_type"
                            ],
                            "oneOf": [
                                {
                                    "properties": {
                                        "provider": {
                                            "type": "object",
                                            "properties": {
                                                "source_id": {
                                                    "type": "string",
                                                    "description": "the stripe source token for a credit card or a token representing a credit\ncard as returned by various stripe libraries, see https://stripe.com/docs/checkout"
                                                }
                                            },
                                            "required": [
                                                "source_id"
                                            ],
                                            "description": "provider information"
                                        }
                                    },
                                    "required": [
                                        "provider"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/user/payment_methods/primary": {
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "1000bb3e-506d-11e5-9781-d43d7eece658",
                                "created_at": "2009-06-30T18:30:00+02:00",
                                "primary": true,
                                "validated": "successful",
                                "provider_type": "stripe",
                                "provider": {
                                    "customer_id": "cus_123456789",
                                    "source_id": "card_123456789",
                                    "instrument_type": "credit_card",
                                    "instrument": {
                                        "number": "6789",
                                        "type": "Visa",
                                        "expire_month": 12,
                                        "expire_year": 2067,
                                        "country": "DE",
                                        "cvc_check": "pass"
                                    }
                                },
                                "fee": {
                                    "percent": 1.4,
                                    "fixed": 25,
                                    "minimum_total": 50
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the payment method id"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "date when the payment method was created"
                                },
                                "primary": {
                                    "type": "boolean",
                                    "description": "wether this is the primary payment method of the user"
                                },
                                "validated": {
                                    "type": "string",
                                    "enum": [
                                        "successful",
                                        "failed",
                                        "pending"
                                    ],
                                    "description": "Wether the payment method was already validated successfully. Non validated payment methods cannot be used for paying."
                                },
                                "provider_type": {
                                    "type": "string",
                                    "enum": [
                                        "stripe"
                                    ],
                                    "description": "provider type"
                                },
                                "fee": {
                                    "type": "object",
                                    "properties": {
                                        "percent": {
                                            "type": "number",
                                            "description": "the payment provider fee percentage. This percentage is added on top of the overall booking cost. The overall booking cost is calculated by `booking_fee + booking_fee * fee_percentage + fee_fixed`."
                                        },
                                        "fixed": {
                                            "type": "number",
                                            "description": "fixed payment provider fee."
                                        },
                                        "minimum_total": {
                                            "type": "number",
                                            "description": "minimum total amount for a booking transaction. If a booking is cheaper than this, the payment provider fee will be adapted."
                                        }
                                    }
                                }
                            },
                            "required": [
                                "provider_type"
                            ],
                            "oneOf": [
                                {
                                    "properties": {
                                        "provider": {
                                            "type": "object",
                                            "properties": {
                                                "customer_id": {
                                                    "type": "string",
                                                    "description": "stripe customer id"
                                                },
                                                "source_id": {
                                                    "type": "string",
                                                    "description": "stripe source id"
                                                },
                                                "instrument_type": {
                                                    "type": "string",
                                                    "description": "type of payment instrument used for charging"
                                                }
                                            },
                                            "required": [
                                                "customer_id",
                                                "source_id",
                                                "instrument_type"
                                            ],
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "instrument": {
                                                            "type": "object",
                                                            "properties": {
                                                                "number": {
                                                                    "type": "string",
                                                                    "description": "last 4 digits of credit card"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "card type as defined by `brand` at https://stripe.com/docs/api#card_object"
                                                                },
                                                                "expire_month": {
                                                                    "type": "number",
                                                                    "description": "expiration month of the credit card"
                                                                },
                                                                "expire_year": {
                                                                    "type": "number",
                                                                    "description": "expiration year of the credit card"
                                                                },
                                                                "country": {
                                                                    "type": "string",
                                                                    "description": "two letter ISO code representing the country of the card"
                                                                },
                                                                "cvc_check": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "pass",
                                                                        "fail",
                                                                        "unavailable",
                                                                        "unchecked"
                                                                    ],
                                                                    "description": "result of the cvc check if cvc was provided"
                                                                }
                                                            },
                                                            "required": [
                                                                "number",
                                                                "type",
                                                                "expire_month",
                                                                "expire_year",
                                                                "country",
                                                                "cvc_check"
                                                            ],
                                                            "description": "the credit card information"
                                                        }
                                                    },
                                                    "required": [
                                                        "instrument"
                                                    ]
                                                }
                                            ],
                                            "description": "payment using stripe"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "404": {
                        "description": "Returned if no primary payment method is available.",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Retrieve primary payment method",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/user/payment_methods/{payment_method_id}": {
            "put": {
                "responses": {
                    "200": {
                        "description": "Returned when the payment method was successfully activated/deactivated.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "id": "1000bb3e-506d-11e5-9781-d43d7eece658",
                                "created_at": "2009-06-30T18:30:00+02:00",
                                "primary": true,
                                "validated": "successful",
                                "provider_type": "stripe",
                                "provider": {
                                    "customer_id": "cus_123456789",
                                    "source_id": "card_123456789",
                                    "instrument_type": "credit_card",
                                    "instrument": {
                                        "number": "6789",
                                        "type": "Visa",
                                        "expire_month": 12,
                                        "expire_year": 2067,
                                        "country": "DE",
                                        "cvc_check": "pass"
                                    }
                                },
                                "fee": {
                                    "percent": 1.4,
                                    "fixed": 25,
                                    "minimum_total": 50
                                }
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "description": "the payment method id"
                                },
                                "created_at": {
                                    "type": "string",
                                    "description": "date when the payment method was created"
                                },
                                "primary": {
                                    "type": "boolean",
                                    "description": "wether this is the primary payment method of the user"
                                },
                                "validated": {
                                    "type": "string",
                                    "enum": [
                                        "successful",
                                        "failed",
                                        "pending"
                                    ],
                                    "description": "Wether the payment method was already validated successfully. Non validated payment methods cannot be used for paying."
                                },
                                "provider_type": {
                                    "type": "string",
                                    "enum": [
                                        "stripe"
                                    ],
                                    "description": "provider type"
                                },
                                "fee": {
                                    "type": "object",
                                    "properties": {
                                        "percent": {
                                            "type": "number",
                                            "description": "the payment provider fee percentage. This percentage is added on top of the overall booking cost. The overall booking cost is calculated by `booking_fee + booking_fee * fee_percentage + fee_fixed`."
                                        },
                                        "fixed": {
                                            "type": "number",
                                            "description": "fixed payment provider fee."
                                        },
                                        "minimum_total": {
                                            "type": "number",
                                            "description": "minimum total amount for a booking transaction. If a booking is cheaper than this, the payment provider fee will be adapted."
                                        }
                                    }
                                }
                            },
                            "required": [
                                "provider_type"
                            ],
                            "oneOf": [
                                {
                                    "properties": {
                                        "provider": {
                                            "type": "object",
                                            "properties": {
                                                "customer_id": {
                                                    "type": "string",
                                                    "description": "stripe customer id"
                                                },
                                                "source_id": {
                                                    "type": "string",
                                                    "description": "stripe source id"
                                                },
                                                "instrument_type": {
                                                    "type": "string",
                                                    "description": "type of payment instrument used for charging"
                                                }
                                            },
                                            "required": [
                                                "customer_id",
                                                "source_id",
                                                "instrument_type"
                                            ],
                                            "oneOf": [
                                                {
                                                    "properties": {
                                                        "instrument": {
                                                            "type": "object",
                                                            "properties": {
                                                                "number": {
                                                                    "type": "string",
                                                                    "description": "last 4 digits of credit card"
                                                                },
                                                                "type": {
                                                                    "type": "string",
                                                                    "description": "card type as defined by `brand` at https://stripe.com/docs/api#card_object"
                                                                },
                                                                "expire_month": {
                                                                    "type": "number",
                                                                    "description": "expiration month of the credit card"
                                                                },
                                                                "expire_year": {
                                                                    "type": "number",
                                                                    "description": "expiration year of the credit card"
                                                                },
                                                                "country": {
                                                                    "type": "string",
                                                                    "description": "two letter ISO code representing the country of the card"
                                                                },
                                                                "cvc_check": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "pass",
                                                                        "fail",
                                                                        "unavailable",
                                                                        "unchecked"
                                                                    ],
                                                                    "description": "result of the cvc check if cvc was provided"
                                                                }
                                                            },
                                                            "required": [
                                                                "number",
                                                                "type",
                                                                "expire_month",
                                                                "expire_year",
                                                                "country",
                                                                "cvc_check"
                                                            ],
                                                            "description": "the credit card information"
                                                        }
                                                    },
                                                    "required": [
                                                        "instrument"
                                                    ]
                                                }
                                            ],
                                            "description": "payment using stripe"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "422": {
                        "description": "Returned if an error occured, e.g. `primary` was set to true for a payment method that doesn't support post payment",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 1001,
                                "message": "Error description."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number",
                                    "description": "error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "error message"
                                }
                            }
                        }
                    }
                },
                "summary": "Update a user payment method",
                "description": "Updates a users payment method.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "payment_method_id",
                        "in": "path",
                        "description": "the user id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "primary": {
                                    "type": "boolean",
                                    "description": "Wether the payment method should be activated as the users primary payment method.\nIf another payment method of the user was set to be the primary method before,\nthat one will be be changed to not be the primary one anymore.",
                                    "default": false
                                }
                            }
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Returned when the payment method was successfully deleted.",
                        "headers": {},
                        "examples": {}
                    },
                    "422": {
                        "description": "Returned if an error occured, e.g. a booking exists that waits for a payment from this method.",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "code": 1001,
                                "message": "Error description."
                            }
                        },
                        "schema": {
                            "type": "object",
                            "properties": {
                                "code": {
                                    "type": "number",
                                    "description": "error code"
                                },
                                "message": {
                                    "type": "string",
                                    "description": "error message"
                                }
                            }
                        }
                    }
                },
                "summary": "Delete a user payment method",
                "description": "Deletes a user payment method.",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "payment_method_id",
                        "in": "path",
                        "description": "the user id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        },
        "/user/tracking/installation": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Tracking App Installation",
                "description": "",
                "tags": [
                    "User"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "device_id": {
                                    "type": "string",
                                    "description": "identifier for the mobile device on that the installation was done, e.g. advertisement id for Android or iOS"
                                },
                                "campaigns": {
                                    "type": "array",
                                    "description": "array of campaigns that the installation is coming from, contains at least one element"
                                }
                            },
                            "required": [
                                "device_id"
                            ]
                        }
                    }
                ]
            }
        },
        "/bookings/{booking_id}/violation": {
            "post": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "license_plate": "B-CD 4321",
                                "comment": "This car parked on my parking space!!!",
                                "image_url": null
                            }
                        }
                    }
                },
                "summary": "Create a New Violation",
                "description": "",
                "tags": [
                    "Violations"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "The identifier of the booking\nto which the violation belongs to.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "license_plate": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "license_plate",
                                "comment"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "license_plate": "B-CD 4321",
                                "comment": "This car parked on my parking space!!!",
                                "image_url": "https://parku.ch/images/reports/12.jpeg"
                            }
                        }
                    }
                },
                "summary": "Retrieve a Violation",
                "description": "",
                "tags": [
                    "Violations"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "The identifier of the booking\nto which the violation belongs to.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "license_plate": "B-CD 4321",
                                "comment": "This car parked on my parking space!!!",
                                "image_url": "https://parku.ch/images/reports/12.jpeg"
                            }
                        }
                    }
                },
                "summary": "Update a Violation",
                "description": "Updates the violation by setting the values of the parameters passed.\nAny parameters not provided will be left unchanged. The photo can be updated through\n[adding a new photo](#header-add-a-photo).",
                "tags": [
                    "Violations"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "The identifier of the booking\nto which the violation belongs to.\n",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "license_plate": {
                                    "type": "string"
                                },
                                "comment": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "license_plate",
                                "comment"
                            ]
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {},
                        "examples": {}
                    }
                },
                "summary": "Delete a Violation",
                "description": "",
                "tags": [
                    "Violations"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "The identifier of the booking\nto which the violation belongs to.\n",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/bookings/{booking_id}/violation/image": {
            "put": {
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {},
                        "examples": {
                            "application/json": {
                                "license_plate": "B-CD 4321",
                                "comment": "This car parked on my parking space!!!",
                                "image_url": "https://parku.ch/images/reports/12.jpeg"
                            }
                        }
                    }
                },
                "summary": "Add a Photo",
                "description": "You can add one photo to the violation. If you add a new photo the previous one gets overwritten.\n\nThe entire `PUT` body will be treated as the file. Make sure to add the Content-Type: `application/octet-stream`\nto your header.",
                "tags": [
                    "Violations"
                ],
                "parameters": [
                    {
                        "name": "booking_id",
                        "in": "path",
                        "description": "The identifier of the booking\nto which the violation belongs to.\n",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ]
            }
        }
    },
    "definitions": {
        "Attributes": {},
        "Bookings": {},
        "Booking": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "license_plate": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "date_start": {
                    "type": "string"
                },
                "date_end": {
                    "type": "string"
                },
                "price": {
                    "type": "Booking Price"
                },
                "violation": {
                    "type": "Violation Dummy"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "offstreet",
                        "onstreet"
                    ]
                },
                "group_id": {
                    "type": "string"
                },
                "parking_space_code": {
                    "type": "string"
                },
                "location": {
                    "type": "Location"
                },
                "zone": {
                    "type": "Parking Zone Base Data"
                },
                "extend": {
                    "type": "Booking Extend Times"
                }
            }
        },
        "Booking Extend Times": {
            "type": "object",
            "properties": {
                "date_start": {
                    "type": "string"
                },
                "date_end": {
                    "type": "string"
                },
                "minutes": {
                    "type": "number"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "Violation Dummy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "Booking Price": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "number"
                },
                "parking_fee": {
                    "type": "number"
                },
                "transaction_fee": {
                    "type": "number"
                },
                "payment_provider_fee": {
                    "type": "number"
                }
            }
        },
        "User Metadata Input": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "Cars": {},
        "Car": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "license_place": {
                    "type": "string"
                },
                "vehicle": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "Coupon": {},
        "Devices": {},
        "Api Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "number"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Facebook": {},
        "Invitations": {},
        "Locations": {
            "type": "object",
            "properties": {
                "Locations and Clusters Model": {
                    "type": "Locations and Clusters"
                },
                "First Level Cluster Model": {
                    "type": "First Level Cluster"
                },
                "Second Level Cluster Model": {
                    "type": "Second Level Cluster"
                },
                "Location Model": {
                    "type": "Location"
                },
                "Parking Space Group Model": {
                    "type": "Parking Space Group"
                },
                "Availability Model": {
                    "type": "Availability"
                }
            }
        },
        "Locations and Clusters": {
            "type": "object",
            "properties": {
                "clusters": {
                    "type": "array",
                    "items": {}
                },
                "locations": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "First Level Cluster": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postcode",
                        "city",
                        "country"
                    ]
                },
                "count": {
                    "type": "number"
                },
                "center_latitude": {
                    "type": "number"
                },
                "center_longitude": {
                    "type": "number"
                },
                "sw_latitude": {
                    "type": "number"
                },
                "sw_longitude": {
                    "type": "number"
                },
                "ne_latitude": {
                    "type": "number"
                },
                "ne_longitude": {
                    "type": "number"
                },
                "includes": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Second Level Cluster": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "postcode",
                        "city",
                        "country"
                    ]
                },
                "count": {
                    "type": "number"
                },
                "center_latitude": {
                    "type": "number"
                },
                "center_longitude": {
                    "type": "number"
                },
                "sw_latitude": {
                    "type": "number"
                },
                "sw_longitude": {
                    "type": "number"
                },
                "ne_latitude": {
                    "type": "number"
                },
                "ne_longitude": {
                    "type": "number"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "address_slug": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "street": {
                    "type": "string"
                },
                "street_number": {
                    "type": "string"
                },
                "postcode": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "bookable": {
                    "type": "boolean"
                },
                "payment": {
                    "type": "object"
                },
                "availability": {
                    "type": "Availability"
                },
                "parking_space_groups": {
                    "type": "array",
                    "items": {}
                },
                "gates": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Gate": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "qrcode",
                        "beacon"
                    ]
                },
                "identifier": {
                    "type": "string"
                },
                "gateways": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "Gateway": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "api",
                        "box"
                    ]
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Parking Space Group": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "off-street",
                        "park-and-ride",
                        "professional-garage",
                        "airport-parking",
                        "harbor-parking"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "image_urls": {
                    "type": "array",
                    "items": {}
                },
                "options": {
                    "type": "array",
                    "items": {}
                },
                "support": {
                    "type": "object"
                },
                "price": {
                    "type": "Location Price"
                },
                "user_owned": {
                    "type": "boolean"
                },
                "settings": {
                    "type": "object"
                },
                "required_fields": {
                    "type": "array",
                    "items": {}
                },
                "provider": {
                    "type": "string",
                    "enum": [
                        "parku",
                        "holidayextras",
                        "inrix"
                    ]
                },
                "availability": {
                    "type": "Availability"
                }
            }
        },
        "Availability": {
            "type": "object",
            "properties": {
                "current": {
                    "type": "number"
                },
                "maximum": {
                    "type": "number"
                },
                "next_start": {
                    "type": "string"
                },
                "next_end": {
                    "type": "string"
                }
            }
        },
        "Location Price": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "number"
                },
                "period": {
                    "type": "string",
                    "enum": [
                        "timeframe",
                        "day",
                        "week",
                        "month"
                    ]
                },
                "rate_hourly": {
                    "type": "number"
                },
                "rate_daily": {
                    "type": "number"
                },
                "rate_weekly": {
                    "type": "number"
                },
                "rate_monthly": {
                    "type": "number"
                }
            }
        },
        "Login": {},
        "Login Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "male",
                        "female"
                    ]
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "credit": {
                    "type": "number"
                },
                "country": {
                    "type": "string"
                },
                "facebook_id": {
                    "type": "string"
                },
                "cars": {
                    "type": "array",
                    "items": {}
                },
                "phone_numbers": {
                    "type": "array",
                    "items": {}
                },
                "attributes": {
                    "type": "array",
                    "items": {}
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "Phone Number": {},
        "Attribute": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "Onstreet": {},
        "Parking Zone Input": {
            "type": "object",
            "required": [
                "id",
                "latitude",
                "longitude"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                }
            }
        },
        "Parking Zone Base Data": {
            "allOf": [
                {
                    "$ref": "#/definitions/Parking Zone Input"
                },
                {
                    "type": "object",
                    "required": [
                        "price",
                        "max_datetime_end",
                        "duration_max_minutes`"
                    ],
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "hours": {
                            "type": "string"
                        },
                        "price": {
                            "type": "Zone Price"
                        },
                        "max_datetime_end": {
                            "type": "string"
                        },
                        "duration_max_minutes`": {
                            "type": "number"
                        }
                    }
                }
            ]
        },
        "Parking Zone": {
            "type": "object",
            "properties": {
                "available_durations": {
                    "type": "array",
                    "items": {}
                },
                "available_payment_methods": {
                    "type": "array",
                    "items": {}
                },
                "currently_valid": {
                    "type": "boolean"
                }
            }
        },
        "Zone Price": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                }
            }
        },
        "Currency": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string",
                    "enum": [
                        "EUR",
                        "CHF"
                    ]
                }
            }
        },
        "Password": {},
        "Payment": {
            "allOf": [
                {
                    "$ref": "#/definitions/Payment Method"
                },
                {
                    "type": "object",
                    "properties": {
                        "amount": {
                            "type": "number"
                        }
                    }
                }
            ]
        },
        "Pre Booking Payment Input": {
            "type": "object",
            "required": [
                "type",
                "amount"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "paypal",
                        "credit",
                        "braintree"
                    ]
                },
                "amount": {
                    "type": "number"
                },
                "payload": {
                    "type": "string"
                }
            }
        },
        "Payment Method Input": {
            "type": "object",
            "required": [
                "provider_type"
            ],
            "properties": {
                "primary": {
                    "type": "boolean"
                },
                "provider_type": {
                    "type": "string",
                    "enum": [
                        "stripe"
                    ]
                }
            }
        },
        "Payment Method Update Input": {
            "type": "object",
            "properties": {
                "primary": {
                    "type": "boolean"
                }
            }
        },
        "Stripe Payment Method Input": {
            "type": "object",
            "required": [
                "source_id"
            ],
            "properties": {
                "source_id": {
                    "type": "string"
                }
            }
        },
        "Used Payment Method Input": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "immediate"
                    ]
                }
            }
        },
        "Payment Method": {
            "type": "object",
            "required": [
                "provider_type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "primary": {
                    "type": "boolean"
                },
                "validated": {
                    "type": "string",
                    "enum": [
                        "successful",
                        "failed",
                        "pending"
                    ]
                },
                "provider_type": {
                    "type": "string",
                    "enum": [
                        "stripe"
                    ]
                },
                "fee": {
                    "type": "object"
                }
            }
        },
        "Stripe Payment Method": {
            "type": "object",
            "required": [
                "customer_id",
                "source_id",
                "instrument_type"
            ],
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "source_id": {
                    "type": "string"
                },
                "instrument_type": {
                    "type": "string"
                }
            }
        },
        "Credit Card Payment Method": {
            "type": "object",
            "required": [
                "number",
                "type",
                "expire_month",
                "expire_year",
                "country",
                "cvc_check"
            ],
            "properties": {
                "number": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "expire_month": {
                    "type": "number"
                },
                "expire_year": {
                    "type": "number"
                },
                "country": {
                    "type": "string"
                },
                "cvc_check": {
                    "type": "string",
                    "enum": [
                        "pass",
                        "fail",
                        "unavailable",
                        "unchecked"
                    ]
                }
            }
        },
        "Phone Numbers": {},
        "Sesam Actions": {},
        "Sesam": {},
        "Settings": {},
        "Notification": {},
        "User Settings": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "User Settings Location"
                },
                "sesam": {
                    "type": "User Settings Sesam"
                },
                "gps": {
                    "type": "User Settings GPS"
                },
                "booking": {
                    "type": "User Settings Booking"
                },
                "features": {
                    "type": "User Settings Features"
                },
                "provider": {
                    "type": "User Settings Provider"
                }
            }
        },
        "User Settings Location": {
            "type": "object",
            "properties": {
                "bookable_range_start": {
                    "type": "number"
                },
                "bookable_range_end": {
                    "type": "number"
                },
                "booking_duration_min": {
                    "type": "number"
                },
                "booking_duration_max": {
                    "type": "number"
                }
            }
        },
        "User Settings Sesam": {
            "type": "object",
            "properties": {
                "bluetooth": {
                    "type": "object"
                }
            }
        },
        "User Settings GPS": {
            "type": "object",
            "properties": {
                "ttl": {
                    "type": "number"
                },
                "accuracy": {
                    "type": "number"
                }
            }
        },
        "User Settings Booking": {
            "type": "object",
            "properties": {
                "collection": {
                    "type": "object"
                },
                "notification": {
                    "type": "object"
                },
                "fields": {
                    "type": "object"
                }
            }
        },
        "User Settings Notification": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "time",
                        "region"
                    ]
                }
            }
        },
        "User Settings Features": {
            "type": "object",
            "properties": {
                "recommend_update": {
                    "type": "User Settings Feature Flag"
                },
                "force_update": {
                    "type": "User Settings Feature Flag"
                },
                "non_bookable_ps_visible": {
                    "type": "User Settings Feature Flag"
                },
                "smart_device_link_enabled": {
                    "type": "User Settings Feature Flag"
                }
            }
        },
        "User Settings Provider": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "thumbnail": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "legals": {
                    "type": "object"
                }
            }
        },
        "User Settings Provider Terms": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "User Settings Notification Time": {
            "type": "object",
            "properties": {
                "minutes": {
                    "type": "number"
                },
                "relative_to": {
                    "type": "string",
                    "enum": [
                        "begin",
                        "end"
                    ]
                },
                "include_distance": {
                    "type": "boolean"
                }
            }
        },
        "User Settings Additional Field": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "text",
                        "datetime",
                        "date",
                        "time",
                        "number",
                        "tel",
                        "boolean"
                    ]
                }
            }
        },
        "User Settings Feature Flag": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "Static Pages": {},
        "User": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "age_range": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "credit": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "facebook_id": {
                    "type": "string"
                },
                "cars": {
                    "type": "object"
                },
                "phone_numbers": {
                    "type": "object"
                },
                "attributes": {
                    "type": "object"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "User Verification": {},
        "User Payment Methods": {},
        "User Tracking": {},
        "User Tracking Installation": {
            "type": "object",
            "required": [
                "device_id"
            ],
            "properties": {
                "device_id": {
                    "type": "string"
                },
                "campaigns": {
                    "type": "array",
                    "items": {}
                }
            }
        },
        "User Tracking Campaign": {
            "type": "object",
            "required": [
                "id",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "adjust",
                        "facebook"
                    ]
                }
            }
        },
        "Violations": {},
        "Violation Images": {}
    }
}