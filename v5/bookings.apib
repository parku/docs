# Group Bookings

## Bookings [/bookings]
Access needs a __private key__.

+ Attributes
    + `Parking Space Booking Model` (Parking Space Booking)
    + `Parking Zone Booking Model` (Parking Zone Booking)

### Create a new Booking [POST /bookings{?location_id,date_start,date_end,license_plate,phone_number,provider,provider_info,status,required_fields}]
+ Request (application/json)
    + Attributes
        + `group_id`: `00cd7cfd-e42d-11e2-8bf1-8a83f3373875` (string, required) -
            The ID of the location you get returned from the locations request
        + `date_start`: `2016-10-27T09:10:20+00:00` (string, required) - start date and time of the booking
        + `date_end`: `2016-10-27T10:10:20+00:00` (string, required) - end date and time of the booking
        + `license_plate`: `B-AB 1234` (string, required) - The license plate of the used car.
            Get all cars of a user from the [cars](#user-cars-get) request.
        + `phone_number`: `+493057701872` (string, required) - The phone number.
            Get all phone numbers of a user from the [phone_numbers](`#user-phone_numbers-get`) request.
        + payment (array[Pre Booking Payment Input], optional)
          The payments to use for paying. This can be credits, coupons,
          paypal and braintree payments that have been authorized on the frontend.
        + payment_method (Payment Method Input, optional)
          The payment method to use for paying. This method will be used for paying the fee of the booking
          after all payments from the `payments` field have been applied. E.g. if you provided a 5 Euro
          voucher via `payments`, the payment method will be used on 5 Euro less than the actual booking fee.
        + `status`: all (enum[string], optional) - Get bookings by status.
            + Members
                + all
                + active
                + cancelled
            + Default: all
        + `required_field` (object) - Parking space required fields defined in the locations request. The required fields should contain all required fields defined in location. All values should be sent as strings.
            + car_color: `red` (string, optional) - the car color
            + number_of_passengers: `5` (string, optional) - the number of passengers

    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 201 (application/json)
    + Body

            {
              "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
              "license_plate": "B-AB 1234",
              "phone_number": "+493057701872",
              "location": {
                "id": "00cd7cfd-e42d-11e2-8bf1-8a83f3373875",
                "code": "ZHRTHW",
                "latitude": 47.365398,
                "longitude": 8.51987,
                "street": "Hopfenstrasse",
                "street_number": "20",
                "postcode": "8045",
                "city": "Zürich",
                "country": "CH",
                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten. Die andere Hälfte wird benötigt. Aufteilung wie im Bild.",
                "post_booking_info": "Bitte holen sie den Schlüssel vorher ab und schließen das Tor",
                "image_urls": [
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image",
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image"
                ],
                "options": [],
                "notifications": [],
                "currency": "CHF",
                "pricing": {
                  "rate_hourly": 2,
                  "rate_daily": 10,
                  "rate_weekly": null,
                  "rate_monthly": null
                },
                "support": {
                  "phone_number": "+41 43 928 72 52"
                },
                "address_slug": "hopfenstrasse-20",
                "user_owned": false,
                "settings": {
                  "bookable_range_start": -15,
                  "bookable_range_end": 43200,
                  "booking_duration_min": 30,
                  "booking_duration_max": 43200
                },
                "required_fields":[
                  "additional_services",
                  "car_colour",
                  "number_of_passengers"
                ],
                "gates": [
                  {
                    "type": "beacon",
                    "identifier": "A97186B0-C879-4526-93AD-29A731AB0C39:12:F5",
                    "gateways": [
                      {
                        "type": "box",
                        "name": "PRK-123"
                      },
                      {
                        "type": "api"
                      }
                    ]
                  },
                  {
                    "type": "qrcode",
                    "identifier": "PARKU3KU",
                    "gateways": [
                      {
                        "type": "api"
                      }
                    ]
                  }
                ]
              },
              "reference": "HRS5J",
              "date_start": "2016-10-27T10:00:00+0000",
              "date_end": "2016-10-27T16:30:00+0000",
              "price": 13.75,
              "currency": "CHF",
              "violation": null
            }

### Retrieve a Booking [GET /bookings/{reference}]
Retrieves the details of an existing booking. You need to supply either the id or the reference of a booking.

+ Parameters

    + reference: `005c4826-4e28-11e3-a675-d43d7eece53d` (string, required) - The id or code of the booking
+ Request
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 200 (application/json)
    + Body

            {
              "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
              "license_plate": "B-AB 1234",
              "phone_number": "+493057701872",
              "location": {
                "id": "00cd7cfd-e42d-11e2-8bf1-8a83f3373875",
                "code": "ZHRTHW",
                "latitude": 47.365398,
                "longitude": 8.51987,
                "street": "Hopfenstrasse",
                "street_number": "20",
                "postcode": "8045",
                "city": "Zürich",
                "country": "CH",
                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten. Die andere Hälfte wird benötigt. Aufteilung wie im Bild.",
                "post_booking_info": "Bitte holen sie den Schlüssel vorher ab und schließen das Tor",
                "image_urls": [
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image",
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image"
                ],
                "options": [],
                "notifications": [],
                "currency": "CHF",
                "pricing": {
                  "rate_hourly": 2,
                  "rate_daily": 10,
                  "rate_weekly": null,
                  "rate_monthly": null
                },
                "support": {
                  "phone_number": "+41 43 928 72 52"
                },
                "address_slug": "hopfenstrasse-20",
                "user_owned": false,
                "settings": {
                  "bookable_range_start": -15,
                  "bookable_range_end": 43200,
                  "booking_duration_min": 30,
                  "booking_duration_max": 43200
                },
                "gates": [
                  {
                    "type": "beacon",
                    "identifier": "A97186B0-C879-4526-93AD-29A731AB0C39:12:F5",
                    "gateways": [
                      {
                        "type": "box",
                        "name": "PRK-123"
                      },
                      {
                        "type": "api"
                      }
                    ]
                  },
                  {
                    "type": "qrcode",
                    "identifier": "PARKU3KU",
                    "gateways": [
                      {
                        "type": "api"
                      }
                    ]
                  }
                ]
              },
              "reference": "HRS5J",
              "date_start": "2016-10-27T10:00:00+0000",
              "date_end": "2016-10-27T16:30:00+0000",
              "price": 13.75,
              "currency": "CHF",
              "violation": {
                "license_plate": "B-DC 4321",
                "comment": "This car parked on my parking space!!!",
                "image_url": "https://parku.ch/images/reports/12.jpeg"
              },
              "extend": [
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T16:30:00+0000",
                  "price": 1.25,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T17:30:00+0000",
                  "price": 2.5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T18:30:00+0000",
                  "price": 5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T19:30:00+0000",
                  "price": 7.5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T21:30:00+0000",
                  "price": 7.5,
                  "currency": "CHF"
                }
              ]
            }

### Update a Booking [PUT /bookings/{booking_id}]
Updates the booking by setting the values of the parameters passed. Any parameter not provided will be left unchanged.

+ Request  (application/json)
    + Attributes
        + `booking_id` : `00cd7cfd-e42d-11e2-8bf1-8a83f3373875` (string, required) - the booking id
        + `license_plate`: `B-BC 4567` (string, optional) -
            refer to the description of [`Create a new Booking`](#bookings-bookings-post)
        + `phone_number`: `+493057701871` (string, optional) -
            refer to the description of [`Create a new Booking`](#bookings-bookings-post)
        + `date_end`: `2016-10-27T17:00:00+0000` (string, optional) -
            refer to the description of [`Create a new Booking`](#bookings-bookings-post)
        + `provider`: `paypal` (string, optional) -
            refer to the description of [`Create a new Booking`](#bookings-bookings-post)
        + `provider_info`: `PAY-2CM399047K4649003KM4WJQQ` (string, optional) -
            refer to the description of [`Create a new Booking`](#bookings-bookings-post)
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 200 (application/json)
    + Body


            {
              "id": "005c4826-4e28-11e3-a675-d43d7eece53d",
              "license_plate": "B-BC 1234",
              "phone_number": "+493057701871",
              "location": {
                "id": "00cd7cfd-e42d-11e2-8bf1-8a83f3373875",
                "code": "ZHRTHW",
                "latitude": 47.365398,
                "longitude": 8.51987,
                "street": "Hopfenstrasse",
                "street_number": "20",
                "postcode": "8045",
                "city": "Zürich",
                "country": "CH",
                "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten. Die andere Hälfte wird benötigt. Aufteilung wie im Bild.",
                "post_booking_info": "Bitte holen sie den Schlüssel vorher ab und schließen das Tor",
                "image_urls": [
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image",
                  "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image"
                ],
                "options": [],
                "notifications": [],
                "currency": "CHF",
                "pricing": {
                  "rate_hourly": 2,
                  "rate_daily": 10,
                  "rate_weekly": null,
                  "rate_monthly": null
                },
                "support": {
                  "phone_number": "+41 43 928 72 52"
                },
                "address_slug": "hopfenstrasse-20",
                "user_owned": false,
                "settings": {
                  "bookable_range_start": -15,
                  "bookable_range_end": 43200,
                  "booking_duration_min": 30,
                  "booking_duration_max": 43200
                },
                "gates": [
                  {
                    "type": "beacon",
                    "identifier": "A97186B0-C879-4526-93AD-29A731AB0C39:12:F5",
                    "gateways": [
                      {
                        "type": "box",
                        "name": "PRK-123"
                      },
                      {
                        "type": "api"
                      }
                    ]
                  },
                  {
                    "type": "qrcode",
                    "identifier": "PARKU3KU",
                    "gateways": [
                      {
                        "type": "api"
                      }
                    ]
                  }
                ]
              },
              "reference": "HRS5J",
              "date_start": "2016-10-27T10:00:00+0000",
              "date_end": "2016-10-27T16:30:00+0000",
              "price": 13.75,
              "currency": "CHF",
              "violation": {
                "license_plate": "B-DC 4321",
                "comment": "This car parked on my parking space!!!",
                "image_url": "https://parku.ch/images/reports/12.jpeg"
              },
              "extend": [
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T16:30:00+0000",
                  "price": 1.25,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T17:30:00+0000",
                  "price": 2.5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T18:30:00+0000",
                  "price": 5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T19:30:00+0000",
                  "price": 7.5,
                  "currency": "CHF"
                },
                {
                  "date_start": "2016-10-27T10:00:00+0000",
                  "date_end": "2016-10-27T21:30:00+0000",
                  "price": 7.5,
                  "currency": "CHF"
                }
              ]
            }

### Cancel a Booking [DELETE /bookings/{booking_id}]

+ Parameters
    + booking_id: `00cd7cfd-e42d-11e2-8bf1-8a83f3373875` (string, required) - the booking id

+ Request
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 204

### List all bookings [GET /bookings{?count,offset,date_start,date_end,status}]

+ Parameters
    + count: 3 (number, optional) - A limit on the number of objects to be returned.
        Count can range between 1 and 100 items.
        + Default: 10
    + offset: 10 (number, optional) - An offset into the list of returned items.
        The API will return the requested number of items starting at that offset.
        + Default: 0
    + date_start: past (enum, optional) - Filter bookings, shows past bookings.
        + Members
            + past
    + date_end: future (enum, optional) - Filter bookings, shows past bookings.
        + Members
            + future
    + status: active (enum, optional) - Filter bookings for status.
        + Members
            + all
            + active
            + cancelled
        + Default: all

+ Request
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 200 (application/json)
    + Body

            [
              {
                "id": "0072c629-e622-11e2-8bf1-8a83f3373875",
                "license_plate": "B-AB 1234",
                "location": {
                  "id": "00cd7cfd-e42d-11e2-8bf1-8a83f3373875",
                  "code": "ZHRTHW",
                  "latitude": 47.365398,
                  "longitude": 8.51987,
                  "street": "Hopfenstrasse",
                  "street_number": "20",
                  "postcode": "8045",
                  "city": "Zürich",
                  "country": "CH",
                  "description": "Doppelparkplatz. Jedoch nur für ein Auto zu vermieten. Die andere Hälfte wird benötigt. Aufteilung wie im Bild.",
                  "post_booking_info": "Bitte holen sie den Schlüssel vorher ab und schließen das Tor",
                  "image_urls": [
                    "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image",
                    "http://parku.ch/parkingspace/00cd7cfd-e42d-11e2-8bf1-8a83f3373875/image"
                  ],
                  "options": [],
                  "notifications": [],
                  "currency": "CHF",
                  "pricing": {
                    "rate_hourly": 2,
                    "rate_daily": 10,
                    "rate_weekly": null,
                    "rate_monthly": null
                  },
                  "support": {
                    "phone_number": "+41 43 928 72 52"
                  },
                  "address_slug": "hopfenstrasse-20",
                  "user_owned": false,
                  "settings": {
                    "bookable_range_start": -15,
                    "bookable_range_end": 43200,
                    "booking_duration_min": 30,
                    "booking_duration_max": 43200
                  },
                  "gates": [
                    {
                      "type": "beacon",
                      "identifier": "A97186B0-C879-4526-93AD-29A731AB0C39:12:F5",
                      "gateways": [
                        {
                          "type": "box",
                          "name": "PRK-123"
                        },
                        {
                          "type": "api"
                        }
                      ]
                    },
                    {
                      "type": "qrcode",
                      "identifier": "PARKU3KU",
                      "gateways": [
                        {
                          "type": "api"
                        }
                      ]
                    }
                  ]
                },
                "phone_number": "+493057701872",
                "reference": "HRS5J",
                "date_start": "2016-10-27T10:00:00+0000",
                "date_end": "2016-10-27T16:30:00+0000",
                "price": 13.75,
                "currency": "CHF",
                "violation": null
              },
              {...},
              {...}
            ]

### Stop a Booking [POST /bookings/{booking_id}/stop]
Stops and pays a booking.

Currently supports stopping onstreet bookings only.

+ Parameters
    + booking_id: `00cd7cfd-e42d-11e2-8bf1-8a83f3373875` (string,required) - the booking id

+ Request (application/json)
    + Attributes
        + `stop`: `2009-06-30T18:30:00+02:00` (string,required) - device time when the booking was stopped
        + payment_method (Payment Method Input, optional)
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 200 (application/json)
    + Attributes (Ended Parking Zone Booking)
        + `payment_urls` (object) - urls for user to visit for doing the payment, currently only available for `ideal`
            + `urls` (object)
                + `entrance`: `http://www.ideal.nl/asdf1234`(string)
                + `success`: `http://www.ideal.nl/asdf1234`(string)
                + `cancel`: `http://www.ideal.nl/asdf1234`(string)
                + `failure`: `http://www.ideal.nl/asdf1234`(string)
                + `pending`: `http://www.ideal.nl/asdf1234`(string)

### Retrieve Custom Extend Prices [GET /bookings/{booking_id}/extend{?date_end}]
Retrieving a booking returns a few prices for standard intervals. Use this endpoint for custom intervals.

+ Parameters
    + booking_id: `00cd7cfd-e42d-11e2-8bf1-8a83f3373875` (string, required) - the booking id
    + date_end: `2016-10-27T10:10:20+00:00` (ISO 8601, required) - end date and time of the booking

+ Request
    + Headers

            Authorization: Basic MDEyMzQ1Njc4YWJjZGVmOnBhcmt1

+ Response 200 (application/json)
    + Body

            {
              "date_start": "2016-10-27T10:00:00+0000",
              "date_end": "2016-10-27T17:45:00+0000",
              "price": 3.15,
              "currency": "CHF"
            }

# Data Structures

## Location Dummy (object)
+ id: `005c4826-4e28-11e3-a675-d43d7eece53d` (string) - location id

## Violation Dummy (object)
+ id: `005c4826-4e28-11e3-a675-d43d7eece53d` (string) - violation id

## Booking Price (object)
+ `amount`: `4.25` (number) - the overall amount to pay for the booking
+ `transaction_fee`: `0.25` (number) - the transaction fee included in `amount`
+ `currency`: `EUR` (enum) - the currency of `amount` and `transaction_fee`
    + Members
        + EUR
        + CHF


## Booking Base (object)
+ `id`: `005c4826-4e28-11e3-a675-d43d7eece53d` (string)
+ `license_plate`: `B-AB 1234` (string)
+ `phone_number`: `+493057701872` (string)
+ `reference`: `HRS5J` (string)
+ `date_start`: `2016-10-27T10:00:00+0000` (string)
+ `date_end`: `2016-10-27T16:30:00+0000` (string)
+ `price` (Booking Price)
+ `violation` (Violation Dummy)

## Parking Space Booking (Booking Base)
+ `type`: `location` (enum)
    + Members
        + location
+ `location` (Parking Space Group) - the locaton that was booked, only available if `type` is `location`

## Parking Zone Booking (object)
+ Include Booking Base
+ `type`: `zone` (enum)
    + Members
        + zone
+ `date_end`: null (string, nullable) - is null if booking didn't end yet
+ `price`: null (string, nullable) - is null if booking didn't end yet
+ `zone` (Parking Zone) - the zone that was booked, only available if `type` is `zone`

## Ended Parking Zone Booking (object)
+ Include Parking Zone Booking
+ `date_end`: `2016-10-27T16:30:00+0000` (string, nullable)

## Booking (Booking Base)
+ `type`: `location` (enum) - the booking type
    + Members
        + location
        + zone
+ `location` (Location Dummy) - the locaton that was booked, only available if `type` is `location`
+ `zone` (Parking Zone) - the zone that was booked, only available if `type` is `zone`
